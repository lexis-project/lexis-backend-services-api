// Code generated by go-swagger; DO NOT EDIT.

package usage_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/lexis-project/lexis-backend-services-api.git/models"
)

// AddConsumptionOKCode is the HTTP code returned for type AddConsumptionOK
const AddConsumptionOKCode int = 200

/*AddConsumptionOK Credit status of the account with the provided id

swagger:response addConsumptionOK
*/
type AddConsumptionOK struct {

	/*
	  In: Body
	*/
	Payload *models.CreditStatus `json:"body,omitempty"`
}

// NewAddConsumptionOK creates AddConsumptionOK with default headers values
func NewAddConsumptionOK() *AddConsumptionOK {

	return &AddConsumptionOK{}
}

// WithPayload adds the payload to the add consumption o k response
func (o *AddConsumptionOK) WithPayload(payload *models.CreditStatus) *AddConsumptionOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add consumption o k response
func (o *AddConsumptionOK) SetPayload(payload *models.CreditStatus) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddConsumptionOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddConsumptionUnauthorizedCode is the HTTP code returned for type AddConsumptionUnauthorized
const AddConsumptionUnauthorizedCode int = 401

/*AddConsumptionUnauthorized Unauthorized

swagger:response addConsumptionUnauthorized
*/
type AddConsumptionUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewAddConsumptionUnauthorized creates AddConsumptionUnauthorized with default headers values
func NewAddConsumptionUnauthorized() *AddConsumptionUnauthorized {

	return &AddConsumptionUnauthorized{}
}

// WithPayload adds the payload to the add consumption unauthorized response
func (o *AddConsumptionUnauthorized) WithPayload(payload *models.ErrorResponse) *AddConsumptionUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add consumption unauthorized response
func (o *AddConsumptionUnauthorized) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddConsumptionUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddConsumptionForbiddenCode is the HTTP code returned for type AddConsumptionForbidden
const AddConsumptionForbiddenCode int = 403

/*AddConsumptionForbidden Forbidden

swagger:response addConsumptionForbidden
*/
type AddConsumptionForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewAddConsumptionForbidden creates AddConsumptionForbidden with default headers values
func NewAddConsumptionForbidden() *AddConsumptionForbidden {

	return &AddConsumptionForbidden{}
}

// WithPayload adds the payload to the add consumption forbidden response
func (o *AddConsumptionForbidden) WithPayload(payload *models.ErrorResponse) *AddConsumptionForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add consumption forbidden response
func (o *AddConsumptionForbidden) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddConsumptionForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddConsumptionNotFoundCode is the HTTP code returned for type AddConsumptionNotFound
const AddConsumptionNotFoundCode int = 404

/*AddConsumptionNotFound The account with the id provided doesn't exist

swagger:response addConsumptionNotFound
*/
type AddConsumptionNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewAddConsumptionNotFound creates AddConsumptionNotFound with default headers values
func NewAddConsumptionNotFound() *AddConsumptionNotFound {

	return &AddConsumptionNotFound{}
}

// WithPayload adds the payload to the add consumption not found response
func (o *AddConsumptionNotFound) WithPayload(payload *models.ErrorResponse) *AddConsumptionNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add consumption not found response
func (o *AddConsumptionNotFound) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddConsumptionNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddConsumptionInternalServerErrorCode is the HTTP code returned for type AddConsumptionInternalServerError
const AddConsumptionInternalServerErrorCode int = 500

/*AddConsumptionInternalServerError Something unexpected happend, error raised

swagger:response addConsumptionInternalServerError
*/
type AddConsumptionInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewAddConsumptionInternalServerError creates AddConsumptionInternalServerError with default headers values
func NewAddConsumptionInternalServerError() *AddConsumptionInternalServerError {

	return &AddConsumptionInternalServerError{}
}

// WithPayload adds the payload to the add consumption internal server error response
func (o *AddConsumptionInternalServerError) WithPayload(payload *models.ErrorResponse) *AddConsumptionInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add consumption internal server error response
func (o *AddConsumptionInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddConsumptionInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
