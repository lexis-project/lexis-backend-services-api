// Code generated by go-swagger; DO NOT EDIT.

package workflow_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/lexis-project/lexis-backend-services-api.git/models"
)

// GetWorkflowExecutionStepStatusOKCode is the HTTP code returned for type GetWorkflowExecutionStepStatusOK
const GetWorkflowExecutionStepStatusOKCode int = 200

/*GetWorkflowExecutionStepStatusOK Status of given LEXIS WorkflowExecution

swagger:response getWorkflowExecutionStepStatusOK
*/
type GetWorkflowExecutionStepStatusOK struct {

	/*
	  In: Body
	*/
	Payload []*models.WorkflowExecutionStepStatus `json:"body,omitempty"`
}

// NewGetWorkflowExecutionStepStatusOK creates GetWorkflowExecutionStepStatusOK with default headers values
func NewGetWorkflowExecutionStepStatusOK() *GetWorkflowExecutionStepStatusOK {

	return &GetWorkflowExecutionStepStatusOK{}
}

// WithPayload adds the payload to the get workflow execution step status o k response
func (o *GetWorkflowExecutionStepStatusOK) WithPayload(payload []*models.WorkflowExecutionStepStatus) *GetWorkflowExecutionStepStatusOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get workflow execution step status o k response
func (o *GetWorkflowExecutionStepStatusOK) SetPayload(payload []*models.WorkflowExecutionStepStatus) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetWorkflowExecutionStepStatusOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.WorkflowExecutionStepStatus, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetWorkflowExecutionStepStatusUnauthorizedCode is the HTTP code returned for type GetWorkflowExecutionStepStatusUnauthorized
const GetWorkflowExecutionStepStatusUnauthorizedCode int = 401

/*GetWorkflowExecutionStepStatusUnauthorized Unauthorized

swagger:response getWorkflowExecutionStepStatusUnauthorized
*/
type GetWorkflowExecutionStepStatusUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.AuthorizationResponse `json:"body,omitempty"`
}

// NewGetWorkflowExecutionStepStatusUnauthorized creates GetWorkflowExecutionStepStatusUnauthorized with default headers values
func NewGetWorkflowExecutionStepStatusUnauthorized() *GetWorkflowExecutionStepStatusUnauthorized {

	return &GetWorkflowExecutionStepStatusUnauthorized{}
}

// WithPayload adds the payload to the get workflow execution step status unauthorized response
func (o *GetWorkflowExecutionStepStatusUnauthorized) WithPayload(payload *models.AuthorizationResponse) *GetWorkflowExecutionStepStatusUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get workflow execution step status unauthorized response
func (o *GetWorkflowExecutionStepStatusUnauthorized) SetPayload(payload *models.AuthorizationResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetWorkflowExecutionStepStatusUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetWorkflowExecutionStepStatusNotFoundCode is the HTTP code returned for type GetWorkflowExecutionStepStatusNotFound
const GetWorkflowExecutionStepStatusNotFoundCode int = 404

/*GetWorkflowExecutionStepStatusNotFound The WorkflowExecutionID provided does not exist.

swagger:response getWorkflowExecutionStepStatusNotFound
*/
type GetWorkflowExecutionStepStatusNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.MissingResponse `json:"body,omitempty"`
}

// NewGetWorkflowExecutionStepStatusNotFound creates GetWorkflowExecutionStepStatusNotFound with default headers values
func NewGetWorkflowExecutionStepStatusNotFound() *GetWorkflowExecutionStepStatusNotFound {

	return &GetWorkflowExecutionStepStatusNotFound{}
}

// WithPayload adds the payload to the get workflow execution step status not found response
func (o *GetWorkflowExecutionStepStatusNotFound) WithPayload(payload *models.MissingResponse) *GetWorkflowExecutionStepStatusNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get workflow execution step status not found response
func (o *GetWorkflowExecutionStepStatusNotFound) SetPayload(payload *models.MissingResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetWorkflowExecutionStepStatusNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetWorkflowExecutionStepStatusInternalServerErrorCode is the HTTP code returned for type GetWorkflowExecutionStepStatusInternalServerError
const GetWorkflowExecutionStepStatusInternalServerErrorCode int = 500

/*GetWorkflowExecutionStepStatusInternalServerError unexpected error

swagger:response getWorkflowExecutionStepStatusInternalServerError
*/
type GetWorkflowExecutionStepStatusInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewGetWorkflowExecutionStepStatusInternalServerError creates GetWorkflowExecutionStepStatusInternalServerError with default headers values
func NewGetWorkflowExecutionStepStatusInternalServerError() *GetWorkflowExecutionStepStatusInternalServerError {

	return &GetWorkflowExecutionStepStatusInternalServerError{}
}

// WithPayload adds the payload to the get workflow execution step status internal server error response
func (o *GetWorkflowExecutionStepStatusInternalServerError) WithPayload(payload *models.ErrorResponse) *GetWorkflowExecutionStepStatusInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get workflow execution step status internal server error response
func (o *GetWorkflowExecutionStepStatusInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetWorkflowExecutionStepStatusInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
