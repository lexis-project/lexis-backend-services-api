// Code generated by go-swagger; DO NOT EDIT.

package workflow_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/lexis-project/lexis-backend-services-api.git/models"
)

// GetWorkflowOKCode is the HTTP code returned for type GetWorkflowOK
const GetWorkflowOKCode int = 200

/*GetWorkflowOK Workflow returned

swagger:response getWorkflowOK
*/
type GetWorkflowOK struct {

	/*
	  In: Body
	*/
	Payload *models.WorkflowDetail `json:"body,omitempty"`
}

// NewGetWorkflowOK creates GetWorkflowOK with default headers values
func NewGetWorkflowOK() *GetWorkflowOK {

	return &GetWorkflowOK{}
}

// WithPayload adds the payload to the get workflow o k response
func (o *GetWorkflowOK) WithPayload(payload *models.WorkflowDetail) *GetWorkflowOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get workflow o k response
func (o *GetWorkflowOK) SetPayload(payload *models.WorkflowDetail) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetWorkflowOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetWorkflowUnauthorizedCode is the HTTP code returned for type GetWorkflowUnauthorized
const GetWorkflowUnauthorizedCode int = 401

/*GetWorkflowUnauthorized Unauthorized

swagger:response getWorkflowUnauthorized
*/
type GetWorkflowUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.AuthorizationResponse `json:"body,omitempty"`
}

// NewGetWorkflowUnauthorized creates GetWorkflowUnauthorized with default headers values
func NewGetWorkflowUnauthorized() *GetWorkflowUnauthorized {

	return &GetWorkflowUnauthorized{}
}

// WithPayload adds the payload to the get workflow unauthorized response
func (o *GetWorkflowUnauthorized) WithPayload(payload *models.AuthorizationResponse) *GetWorkflowUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get workflow unauthorized response
func (o *GetWorkflowUnauthorized) SetPayload(payload *models.AuthorizationResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetWorkflowUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetWorkflowNotFoundCode is the HTTP code returned for type GetWorkflowNotFound
const GetWorkflowNotFoundCode int = 404

/*GetWorkflowNotFound Workflow with WorkflowId not found.

swagger:response getWorkflowNotFound
*/
type GetWorkflowNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.MissingResponse `json:"body,omitempty"`
}

// NewGetWorkflowNotFound creates GetWorkflowNotFound with default headers values
func NewGetWorkflowNotFound() *GetWorkflowNotFound {

	return &GetWorkflowNotFound{}
}

// WithPayload adds the payload to the get workflow not found response
func (o *GetWorkflowNotFound) WithPayload(payload *models.MissingResponse) *GetWorkflowNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get workflow not found response
func (o *GetWorkflowNotFound) SetPayload(payload *models.MissingResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetWorkflowNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetWorkflowInternalServerErrorCode is the HTTP code returned for type GetWorkflowInternalServerError
const GetWorkflowInternalServerErrorCode int = 500

/*GetWorkflowInternalServerError unexpected error

swagger:response getWorkflowInternalServerError
*/
type GetWorkflowInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewGetWorkflowInternalServerError creates GetWorkflowInternalServerError with default headers values
func NewGetWorkflowInternalServerError() *GetWorkflowInternalServerError {

	return &GetWorkflowInternalServerError{}
}

// WithPayload adds the payload to the get workflow internal server error response
func (o *GetWorkflowInternalServerError) WithPayload(payload *models.ErrorResponse) *GetWorkflowInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get workflow internal server error response
func (o *GetWorkflowInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetWorkflowInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
