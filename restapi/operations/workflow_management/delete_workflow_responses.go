// Code generated by go-swagger; DO NOT EDIT.

package workflow_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/lexis-project/lexis-backend-services-api.git/models"
)

// DeleteWorkflowOKCode is the HTTP code returned for type DeleteWorkflowOK
const DeleteWorkflowOKCode int = 200

/*DeleteWorkflowOK Workflow Deleted

swagger:response deleteWorkflowOK
*/
type DeleteWorkflowOK struct {

	/*
	  In: Body
	*/
	Payload *models.DeletedResponse `json:"body,omitempty"`
}

// NewDeleteWorkflowOK creates DeleteWorkflowOK with default headers values
func NewDeleteWorkflowOK() *DeleteWorkflowOK {

	return &DeleteWorkflowOK{}
}

// WithPayload adds the payload to the delete workflow o k response
func (o *DeleteWorkflowOK) WithPayload(payload *models.DeletedResponse) *DeleteWorkflowOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete workflow o k response
func (o *DeleteWorkflowOK) SetPayload(payload *models.DeletedResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteWorkflowOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteWorkflowBadRequestCode is the HTTP code returned for type DeleteWorkflowBadRequest
const DeleteWorkflowBadRequestCode int = 400

/*DeleteWorkflowBadRequest invalid input, object invalid

swagger:response deleteWorkflowBadRequest
*/
type DeleteWorkflowBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.InvalidResponse `json:"body,omitempty"`
}

// NewDeleteWorkflowBadRequest creates DeleteWorkflowBadRequest with default headers values
func NewDeleteWorkflowBadRequest() *DeleteWorkflowBadRequest {

	return &DeleteWorkflowBadRequest{}
}

// WithPayload adds the payload to the delete workflow bad request response
func (o *DeleteWorkflowBadRequest) WithPayload(payload *models.InvalidResponse) *DeleteWorkflowBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete workflow bad request response
func (o *DeleteWorkflowBadRequest) SetPayload(payload *models.InvalidResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteWorkflowBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteWorkflowUnauthorizedCode is the HTTP code returned for type DeleteWorkflowUnauthorized
const DeleteWorkflowUnauthorizedCode int = 401

/*DeleteWorkflowUnauthorized Unauthorized

swagger:response deleteWorkflowUnauthorized
*/
type DeleteWorkflowUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.AuthorizationResponse `json:"body,omitempty"`
}

// NewDeleteWorkflowUnauthorized creates DeleteWorkflowUnauthorized with default headers values
func NewDeleteWorkflowUnauthorized() *DeleteWorkflowUnauthorized {

	return &DeleteWorkflowUnauthorized{}
}

// WithPayload adds the payload to the delete workflow unauthorized response
func (o *DeleteWorkflowUnauthorized) WithPayload(payload *models.AuthorizationResponse) *DeleteWorkflowUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete workflow unauthorized response
func (o *DeleteWorkflowUnauthorized) SetPayload(payload *models.AuthorizationResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteWorkflowUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteWorkflowNotFoundCode is the HTTP code returned for type DeleteWorkflowNotFound
const DeleteWorkflowNotFoundCode int = 404

/*DeleteWorkflowNotFound Workflow with WorkflowId not found

swagger:response deleteWorkflowNotFound
*/
type DeleteWorkflowNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.MissingResponse `json:"body,omitempty"`
}

// NewDeleteWorkflowNotFound creates DeleteWorkflowNotFound with default headers values
func NewDeleteWorkflowNotFound() *DeleteWorkflowNotFound {

	return &DeleteWorkflowNotFound{}
}

// WithPayload adds the payload to the delete workflow not found response
func (o *DeleteWorkflowNotFound) WithPayload(payload *models.MissingResponse) *DeleteWorkflowNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete workflow not found response
func (o *DeleteWorkflowNotFound) SetPayload(payload *models.MissingResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteWorkflowNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteWorkflowConflictCode is the HTTP code returned for type DeleteWorkflowConflict
const DeleteWorkflowConflictCode int = 409

/*DeleteWorkflowConflict Workflow does not exist

swagger:response deleteWorkflowConflict
*/
type DeleteWorkflowConflict struct {

	/*
	  In: Body
	*/
	Payload *models.ConflictResponse `json:"body,omitempty"`
}

// NewDeleteWorkflowConflict creates DeleteWorkflowConflict with default headers values
func NewDeleteWorkflowConflict() *DeleteWorkflowConflict {

	return &DeleteWorkflowConflict{}
}

// WithPayload adds the payload to the delete workflow conflict response
func (o *DeleteWorkflowConflict) WithPayload(payload *models.ConflictResponse) *DeleteWorkflowConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete workflow conflict response
func (o *DeleteWorkflowConflict) SetPayload(payload *models.ConflictResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteWorkflowConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteWorkflowUnprocessableEntityCode is the HTTP code returned for type DeleteWorkflowUnprocessableEntity
const DeleteWorkflowUnprocessableEntityCode int = 422

/*DeleteWorkflowUnprocessableEntity Workflow currently running in LEXIS WorkflowExecution.

swagger:response deleteWorkflowUnprocessableEntity
*/
type DeleteWorkflowUnprocessableEntity struct {
}

// NewDeleteWorkflowUnprocessableEntity creates DeleteWorkflowUnprocessableEntity with default headers values
func NewDeleteWorkflowUnprocessableEntity() *DeleteWorkflowUnprocessableEntity {

	return &DeleteWorkflowUnprocessableEntity{}
}

// WriteResponse to the client
func (o *DeleteWorkflowUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(422)
}

// DeleteWorkflowInternalServerErrorCode is the HTTP code returned for type DeleteWorkflowInternalServerError
const DeleteWorkflowInternalServerErrorCode int = 500

/*DeleteWorkflowInternalServerError unexpected error

swagger:response deleteWorkflowInternalServerError
*/
type DeleteWorkflowInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewDeleteWorkflowInternalServerError creates DeleteWorkflowInternalServerError with default headers values
func NewDeleteWorkflowInternalServerError() *DeleteWorkflowInternalServerError {

	return &DeleteWorkflowInternalServerError{}
}

// WithPayload adds the payload to the delete workflow internal server error response
func (o *DeleteWorkflowInternalServerError) WithPayload(payload *models.ErrorResponse) *DeleteWorkflowInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete workflow internal server error response
func (o *DeleteWorkflowInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteWorkflowInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
