// Code generated by go-swagger; DO NOT EDIT.

package workflow_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/lexis-project/lexis-backend-services-api.git/models"
)

// GetWorkflowTemplatesOKCode is the HTTP code returned for type GetWorkflowTemplatesOK
const GetWorkflowTemplatesOKCode int = 200

/*GetWorkflowTemplatesOK List of available topologies

swagger:response getWorkflowTemplatesOK
*/
type GetWorkflowTemplatesOK struct {

	/*
	  In: Body
	*/
	Payload []*models.WorkflowTemplate `json:"body,omitempty"`
}

// NewGetWorkflowTemplatesOK creates GetWorkflowTemplatesOK with default headers values
func NewGetWorkflowTemplatesOK() *GetWorkflowTemplatesOK {

	return &GetWorkflowTemplatesOK{}
}

// WithPayload adds the payload to the get workflow templates o k response
func (o *GetWorkflowTemplatesOK) WithPayload(payload []*models.WorkflowTemplate) *GetWorkflowTemplatesOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get workflow templates o k response
func (o *GetWorkflowTemplatesOK) SetPayload(payload []*models.WorkflowTemplate) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetWorkflowTemplatesOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.WorkflowTemplate, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetWorkflowTemplatesUnauthorizedCode is the HTTP code returned for type GetWorkflowTemplatesUnauthorized
const GetWorkflowTemplatesUnauthorizedCode int = 401

/*GetWorkflowTemplatesUnauthorized Authorization information is missing or invalid.

swagger:response getWorkflowTemplatesUnauthorized
*/
type GetWorkflowTemplatesUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.AuthorizationResponse `json:"body,omitempty"`
}

// NewGetWorkflowTemplatesUnauthorized creates GetWorkflowTemplatesUnauthorized with default headers values
func NewGetWorkflowTemplatesUnauthorized() *GetWorkflowTemplatesUnauthorized {

	return &GetWorkflowTemplatesUnauthorized{}
}

// WithPayload adds the payload to the get workflow templates unauthorized response
func (o *GetWorkflowTemplatesUnauthorized) WithPayload(payload *models.AuthorizationResponse) *GetWorkflowTemplatesUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get workflow templates unauthorized response
func (o *GetWorkflowTemplatesUnauthorized) SetPayload(payload *models.AuthorizationResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetWorkflowTemplatesUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetWorkflowTemplatesInternalServerErrorCode is the HTTP code returned for type GetWorkflowTemplatesInternalServerError
const GetWorkflowTemplatesInternalServerErrorCode int = 500

/*GetWorkflowTemplatesInternalServerError Unexpected error.

swagger:response getWorkflowTemplatesInternalServerError
*/
type GetWorkflowTemplatesInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewGetWorkflowTemplatesInternalServerError creates GetWorkflowTemplatesInternalServerError with default headers values
func NewGetWorkflowTemplatesInternalServerError() *GetWorkflowTemplatesInternalServerError {

	return &GetWorkflowTemplatesInternalServerError{}
}

// WithPayload adds the payload to the get workflow templates internal server error response
func (o *GetWorkflowTemplatesInternalServerError) WithPayload(payload *models.ErrorResponse) *GetWorkflowTemplatesInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get workflow templates internal server error response
func (o *GetWorkflowTemplatesInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetWorkflowTemplatesInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
