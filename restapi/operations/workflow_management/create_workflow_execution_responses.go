// Code generated by go-swagger; DO NOT EDIT.

package workflow_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/lexis-project/lexis-backend-services-api.git/models"
)

// CreateWorkflowExecutionCreatedCode is the HTTP code returned for type CreateWorkflowExecutionCreated
const CreateWorkflowExecutionCreatedCode int = 201

/*CreateWorkflowExecutionCreated LEXIS WorkflowExecution created and Input upload succesful

swagger:response createWorkflowExecutionCreated
*/
type CreateWorkflowExecutionCreated struct {

	/*
	  In: Body
	*/
	Payload *models.ItemCreatedResponse `json:"body,omitempty"`
}

// NewCreateWorkflowExecutionCreated creates CreateWorkflowExecutionCreated with default headers values
func NewCreateWorkflowExecutionCreated() *CreateWorkflowExecutionCreated {

	return &CreateWorkflowExecutionCreated{}
}

// WithPayload adds the payload to the create workflow execution created response
func (o *CreateWorkflowExecutionCreated) WithPayload(payload *models.ItemCreatedResponse) *CreateWorkflowExecutionCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create workflow execution created response
func (o *CreateWorkflowExecutionCreated) SetPayload(payload *models.ItemCreatedResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateWorkflowExecutionCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateWorkflowExecutionBadRequestCode is the HTTP code returned for type CreateWorkflowExecutionBadRequest
const CreateWorkflowExecutionBadRequestCode int = 400

/*CreateWorkflowExecutionBadRequest invalid input, object invalid

swagger:response createWorkflowExecutionBadRequest
*/
type CreateWorkflowExecutionBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.InvalidResponse `json:"body,omitempty"`
}

// NewCreateWorkflowExecutionBadRequest creates CreateWorkflowExecutionBadRequest with default headers values
func NewCreateWorkflowExecutionBadRequest() *CreateWorkflowExecutionBadRequest {

	return &CreateWorkflowExecutionBadRequest{}
}

// WithPayload adds the payload to the create workflow execution bad request response
func (o *CreateWorkflowExecutionBadRequest) WithPayload(payload *models.InvalidResponse) *CreateWorkflowExecutionBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create workflow execution bad request response
func (o *CreateWorkflowExecutionBadRequest) SetPayload(payload *models.InvalidResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateWorkflowExecutionBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateWorkflowExecutionUnauthorizedCode is the HTTP code returned for type CreateWorkflowExecutionUnauthorized
const CreateWorkflowExecutionUnauthorizedCode int = 401

/*CreateWorkflowExecutionUnauthorized Unauthorized

swagger:response createWorkflowExecutionUnauthorized
*/
type CreateWorkflowExecutionUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.AuthorizationResponse `json:"body,omitempty"`
}

// NewCreateWorkflowExecutionUnauthorized creates CreateWorkflowExecutionUnauthorized with default headers values
func NewCreateWorkflowExecutionUnauthorized() *CreateWorkflowExecutionUnauthorized {

	return &CreateWorkflowExecutionUnauthorized{}
}

// WithPayload adds the payload to the create workflow execution unauthorized response
func (o *CreateWorkflowExecutionUnauthorized) WithPayload(payload *models.AuthorizationResponse) *CreateWorkflowExecutionUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create workflow execution unauthorized response
func (o *CreateWorkflowExecutionUnauthorized) SetPayload(payload *models.AuthorizationResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateWorkflowExecutionUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateWorkflowExecutionNotFoundCode is the HTTP code returned for type CreateWorkflowExecutionNotFound
const CreateWorkflowExecutionNotFoundCode int = 404

/*CreateWorkflowExecutionNotFound Required dependencies for WorkflowExecution creation not found

swagger:response createWorkflowExecutionNotFound
*/
type CreateWorkflowExecutionNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.MissingResponse `json:"body,omitempty"`
}

// NewCreateWorkflowExecutionNotFound creates CreateWorkflowExecutionNotFound with default headers values
func NewCreateWorkflowExecutionNotFound() *CreateWorkflowExecutionNotFound {

	return &CreateWorkflowExecutionNotFound{}
}

// WithPayload adds the payload to the create workflow execution not found response
func (o *CreateWorkflowExecutionNotFound) WithPayload(payload *models.MissingResponse) *CreateWorkflowExecutionNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create workflow execution not found response
func (o *CreateWorkflowExecutionNotFound) SetPayload(payload *models.MissingResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateWorkflowExecutionNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateWorkflowExecutionConflictCode is the HTTP code returned for type CreateWorkflowExecutionConflict
const CreateWorkflowExecutionConflictCode int = 409

/*CreateWorkflowExecutionConflict LEXIS WorkflowExecution already exists (a4cApplication already deployed).

swagger:response createWorkflowExecutionConflict
*/
type CreateWorkflowExecutionConflict struct {

	/*
	  In: Body
	*/
	Payload *models.ConflictResponse `json:"body,omitempty"`
}

// NewCreateWorkflowExecutionConflict creates CreateWorkflowExecutionConflict with default headers values
func NewCreateWorkflowExecutionConflict() *CreateWorkflowExecutionConflict {

	return &CreateWorkflowExecutionConflict{}
}

// WithPayload adds the payload to the create workflow execution conflict response
func (o *CreateWorkflowExecutionConflict) WithPayload(payload *models.ConflictResponse) *CreateWorkflowExecutionConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create workflow execution conflict response
func (o *CreateWorkflowExecutionConflict) SetPayload(payload *models.ConflictResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateWorkflowExecutionConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateWorkflowExecutionInternalServerErrorCode is the HTTP code returned for type CreateWorkflowExecutionInternalServerError
const CreateWorkflowExecutionInternalServerErrorCode int = 500

/*CreateWorkflowExecutionInternalServerError unexpected error

swagger:response createWorkflowExecutionInternalServerError
*/
type CreateWorkflowExecutionInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewCreateWorkflowExecutionInternalServerError creates CreateWorkflowExecutionInternalServerError with default headers values
func NewCreateWorkflowExecutionInternalServerError() *CreateWorkflowExecutionInternalServerError {

	return &CreateWorkflowExecutionInternalServerError{}
}

// WithPayload adds the payload to the create workflow execution internal server error response
func (o *CreateWorkflowExecutionInternalServerError) WithPayload(payload *models.ErrorResponse) *CreateWorkflowExecutionInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create workflow execution internal server error response
func (o *CreateWorkflowExecutionInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateWorkflowExecutionInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
