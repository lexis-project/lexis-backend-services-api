// Code generated by go-swagger; DO NOT EDIT.

package workflow_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/lexis-project/lexis-backend-services-api.git/models"
)

// UploadWorkflowTemplateCreatedCode is the HTTP code returned for type UploadWorkflowTemplateCreated
const UploadWorkflowTemplateCreatedCode int = 201

/*UploadWorkflowTemplateCreated Workflow Template Uploaded Succesful

swagger:response uploadWorkflowTemplateCreated
*/
type UploadWorkflowTemplateCreated struct {

	/*
	  In: Body
	*/
	Payload *models.ItemCreatedResponse `json:"body,omitempty"`
}

// NewUploadWorkflowTemplateCreated creates UploadWorkflowTemplateCreated with default headers values
func NewUploadWorkflowTemplateCreated() *UploadWorkflowTemplateCreated {

	return &UploadWorkflowTemplateCreated{}
}

// WithPayload adds the payload to the upload workflow template created response
func (o *UploadWorkflowTemplateCreated) WithPayload(payload *models.ItemCreatedResponse) *UploadWorkflowTemplateCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the upload workflow template created response
func (o *UploadWorkflowTemplateCreated) SetPayload(payload *models.ItemCreatedResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UploadWorkflowTemplateCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UploadWorkflowTemplateBadRequestCode is the HTTP code returned for type UploadWorkflowTemplateBadRequest
const UploadWorkflowTemplateBadRequestCode int = 400

/*UploadWorkflowTemplateBadRequest invalid input, object invalid

swagger:response uploadWorkflowTemplateBadRequest
*/
type UploadWorkflowTemplateBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.InvalidResponse `json:"body,omitempty"`
}

// NewUploadWorkflowTemplateBadRequest creates UploadWorkflowTemplateBadRequest with default headers values
func NewUploadWorkflowTemplateBadRequest() *UploadWorkflowTemplateBadRequest {

	return &UploadWorkflowTemplateBadRequest{}
}

// WithPayload adds the payload to the upload workflow template bad request response
func (o *UploadWorkflowTemplateBadRequest) WithPayload(payload *models.InvalidResponse) *UploadWorkflowTemplateBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the upload workflow template bad request response
func (o *UploadWorkflowTemplateBadRequest) SetPayload(payload *models.InvalidResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UploadWorkflowTemplateBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UploadWorkflowTemplateUnauthorizedCode is the HTTP code returned for type UploadWorkflowTemplateUnauthorized
const UploadWorkflowTemplateUnauthorizedCode int = 401

/*UploadWorkflowTemplateUnauthorized Unauthorized

swagger:response uploadWorkflowTemplateUnauthorized
*/
type UploadWorkflowTemplateUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.AuthorizationResponse `json:"body,omitempty"`
}

// NewUploadWorkflowTemplateUnauthorized creates UploadWorkflowTemplateUnauthorized with default headers values
func NewUploadWorkflowTemplateUnauthorized() *UploadWorkflowTemplateUnauthorized {

	return &UploadWorkflowTemplateUnauthorized{}
}

// WithPayload adds the payload to the upload workflow template unauthorized response
func (o *UploadWorkflowTemplateUnauthorized) WithPayload(payload *models.AuthorizationResponse) *UploadWorkflowTemplateUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the upload workflow template unauthorized response
func (o *UploadWorkflowTemplateUnauthorized) SetPayload(payload *models.AuthorizationResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UploadWorkflowTemplateUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UploadWorkflowTemplateConflictCode is the HTTP code returned for type UploadWorkflowTemplateConflict
const UploadWorkflowTemplateConflictCode int = 409

/*UploadWorkflowTemplateConflict Workflow Template Name already exists

swagger:response uploadWorkflowTemplateConflict
*/
type UploadWorkflowTemplateConflict struct {

	/*
	  In: Body
	*/
	Payload *models.ConflictResponse `json:"body,omitempty"`
}

// NewUploadWorkflowTemplateConflict creates UploadWorkflowTemplateConflict with default headers values
func NewUploadWorkflowTemplateConflict() *UploadWorkflowTemplateConflict {

	return &UploadWorkflowTemplateConflict{}
}

// WithPayload adds the payload to the upload workflow template conflict response
func (o *UploadWorkflowTemplateConflict) WithPayload(payload *models.ConflictResponse) *UploadWorkflowTemplateConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the upload workflow template conflict response
func (o *UploadWorkflowTemplateConflict) SetPayload(payload *models.ConflictResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UploadWorkflowTemplateConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UploadWorkflowTemplateInternalServerErrorCode is the HTTP code returned for type UploadWorkflowTemplateInternalServerError
const UploadWorkflowTemplateInternalServerErrorCode int = 500

/*UploadWorkflowTemplateInternalServerError unexpected error

swagger:response uploadWorkflowTemplateInternalServerError
*/
type UploadWorkflowTemplateInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewUploadWorkflowTemplateInternalServerError creates UploadWorkflowTemplateInternalServerError with default headers values
func NewUploadWorkflowTemplateInternalServerError() *UploadWorkflowTemplateInternalServerError {

	return &UploadWorkflowTemplateInternalServerError{}
}

// WithPayload adds the payload to the upload workflow template internal server error response
func (o *UploadWorkflowTemplateInternalServerError) WithPayload(payload *models.ErrorResponse) *UploadWorkflowTemplateInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the upload workflow template internal server error response
func (o *UploadWorkflowTemplateInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UploadWorkflowTemplateInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
