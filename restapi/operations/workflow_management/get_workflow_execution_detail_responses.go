// Code generated by go-swagger; DO NOT EDIT.

package workflow_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/lexis-project/lexis-backend-services-api.git/models"
)

// GetWorkflowExecutionDetailOKCode is the HTTP code returned for type GetWorkflowExecutionDetailOK
const GetWorkflowExecutionDetailOKCode int = 200

/*GetWorkflowExecutionDetailOK Workflow Execution Detail

swagger:response getWorkflowExecutionDetailOK
*/
type GetWorkflowExecutionDetailOK struct {

	/*
	  In: Body
	*/
	Payload *models.WorkflowExecutionDetail `json:"body,omitempty"`
}

// NewGetWorkflowExecutionDetailOK creates GetWorkflowExecutionDetailOK with default headers values
func NewGetWorkflowExecutionDetailOK() *GetWorkflowExecutionDetailOK {

	return &GetWorkflowExecutionDetailOK{}
}

// WithPayload adds the payload to the get workflow execution detail o k response
func (o *GetWorkflowExecutionDetailOK) WithPayload(payload *models.WorkflowExecutionDetail) *GetWorkflowExecutionDetailOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get workflow execution detail o k response
func (o *GetWorkflowExecutionDetailOK) SetPayload(payload *models.WorkflowExecutionDetail) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetWorkflowExecutionDetailOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetWorkflowExecutionDetailUnauthorizedCode is the HTTP code returned for type GetWorkflowExecutionDetailUnauthorized
const GetWorkflowExecutionDetailUnauthorizedCode int = 401

/*GetWorkflowExecutionDetailUnauthorized Unauthorized

swagger:response getWorkflowExecutionDetailUnauthorized
*/
type GetWorkflowExecutionDetailUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.AuthorizationResponse `json:"body,omitempty"`
}

// NewGetWorkflowExecutionDetailUnauthorized creates GetWorkflowExecutionDetailUnauthorized with default headers values
func NewGetWorkflowExecutionDetailUnauthorized() *GetWorkflowExecutionDetailUnauthorized {

	return &GetWorkflowExecutionDetailUnauthorized{}
}

// WithPayload adds the payload to the get workflow execution detail unauthorized response
func (o *GetWorkflowExecutionDetailUnauthorized) WithPayload(payload *models.AuthorizationResponse) *GetWorkflowExecutionDetailUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get workflow execution detail unauthorized response
func (o *GetWorkflowExecutionDetailUnauthorized) SetPayload(payload *models.AuthorizationResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetWorkflowExecutionDetailUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetWorkflowExecutionDetailNotFoundCode is the HTTP code returned for type GetWorkflowExecutionDetailNotFound
const GetWorkflowExecutionDetailNotFoundCode int = 404

/*GetWorkflowExecutionDetailNotFound The application provided does not exist.

swagger:response getWorkflowExecutionDetailNotFound
*/
type GetWorkflowExecutionDetailNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.MissingResponse `json:"body,omitempty"`
}

// NewGetWorkflowExecutionDetailNotFound creates GetWorkflowExecutionDetailNotFound with default headers values
func NewGetWorkflowExecutionDetailNotFound() *GetWorkflowExecutionDetailNotFound {

	return &GetWorkflowExecutionDetailNotFound{}
}

// WithPayload adds the payload to the get workflow execution detail not found response
func (o *GetWorkflowExecutionDetailNotFound) WithPayload(payload *models.MissingResponse) *GetWorkflowExecutionDetailNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get workflow execution detail not found response
func (o *GetWorkflowExecutionDetailNotFound) SetPayload(payload *models.MissingResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetWorkflowExecutionDetailNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetWorkflowExecutionDetailInternalServerErrorCode is the HTTP code returned for type GetWorkflowExecutionDetailInternalServerError
const GetWorkflowExecutionDetailInternalServerErrorCode int = 500

/*GetWorkflowExecutionDetailInternalServerError unexpected error

swagger:response getWorkflowExecutionDetailInternalServerError
*/
type GetWorkflowExecutionDetailInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewGetWorkflowExecutionDetailInternalServerError creates GetWorkflowExecutionDetailInternalServerError with default headers values
func NewGetWorkflowExecutionDetailInternalServerError() *GetWorkflowExecutionDetailInternalServerError {

	return &GetWorkflowExecutionDetailInternalServerError{}
}

// WithPayload adds the payload to the get workflow execution detail internal server error response
func (o *GetWorkflowExecutionDetailInternalServerError) WithPayload(payload *models.ErrorResponse) *GetWorkflowExecutionDetailInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get workflow execution detail internal server error response
func (o *GetWorkflowExecutionDetailInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetWorkflowExecutionDetailInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
