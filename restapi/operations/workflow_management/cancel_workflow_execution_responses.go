// Code generated by go-swagger; DO NOT EDIT.

package workflow_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/lexis-project/lexis-backend-services-api.git/models"
)

// CancelWorkflowExecutionOKCode is the HTTP code returned for type CancelWorkflowExecutionOK
const CancelWorkflowExecutionOKCode int = 200

/*CancelWorkflowExecutionOK LEXIS WorkflowExecution deletion

swagger:response cancelWorkflowExecutionOK
*/
type CancelWorkflowExecutionOK struct {

	/*
	  In: Body
	*/
	Payload *models.DeletedResponse `json:"body,omitempty"`
}

// NewCancelWorkflowExecutionOK creates CancelWorkflowExecutionOK with default headers values
func NewCancelWorkflowExecutionOK() *CancelWorkflowExecutionOK {

	return &CancelWorkflowExecutionOK{}
}

// WithPayload adds the payload to the cancel workflow execution o k response
func (o *CancelWorkflowExecutionOK) WithPayload(payload *models.DeletedResponse) *CancelWorkflowExecutionOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the cancel workflow execution o k response
func (o *CancelWorkflowExecutionOK) SetPayload(payload *models.DeletedResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CancelWorkflowExecutionOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CancelWorkflowExecutionBadRequestCode is the HTTP code returned for type CancelWorkflowExecutionBadRequest
const CancelWorkflowExecutionBadRequestCode int = 400

/*CancelWorkflowExecutionBadRequest invalid input, object invalid

swagger:response cancelWorkflowExecutionBadRequest
*/
type CancelWorkflowExecutionBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.InvalidResponse `json:"body,omitempty"`
}

// NewCancelWorkflowExecutionBadRequest creates CancelWorkflowExecutionBadRequest with default headers values
func NewCancelWorkflowExecutionBadRequest() *CancelWorkflowExecutionBadRequest {

	return &CancelWorkflowExecutionBadRequest{}
}

// WithPayload adds the payload to the cancel workflow execution bad request response
func (o *CancelWorkflowExecutionBadRequest) WithPayload(payload *models.InvalidResponse) *CancelWorkflowExecutionBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the cancel workflow execution bad request response
func (o *CancelWorkflowExecutionBadRequest) SetPayload(payload *models.InvalidResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CancelWorkflowExecutionBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CancelWorkflowExecutionUnauthorizedCode is the HTTP code returned for type CancelWorkflowExecutionUnauthorized
const CancelWorkflowExecutionUnauthorizedCode int = 401

/*CancelWorkflowExecutionUnauthorized Unauthorized

swagger:response cancelWorkflowExecutionUnauthorized
*/
type CancelWorkflowExecutionUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.AuthorizationResponse `json:"body,omitempty"`
}

// NewCancelWorkflowExecutionUnauthorized creates CancelWorkflowExecutionUnauthorized with default headers values
func NewCancelWorkflowExecutionUnauthorized() *CancelWorkflowExecutionUnauthorized {

	return &CancelWorkflowExecutionUnauthorized{}
}

// WithPayload adds the payload to the cancel workflow execution unauthorized response
func (o *CancelWorkflowExecutionUnauthorized) WithPayload(payload *models.AuthorizationResponse) *CancelWorkflowExecutionUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the cancel workflow execution unauthorized response
func (o *CancelWorkflowExecutionUnauthorized) SetPayload(payload *models.AuthorizationResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CancelWorkflowExecutionUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CancelWorkflowExecutionNotFoundCode is the HTTP code returned for type CancelWorkflowExecutionNotFound
const CancelWorkflowExecutionNotFoundCode int = 404

/*CancelWorkflowExecutionNotFound LEXIS WorkflowExecution does not exist

swagger:response cancelWorkflowExecutionNotFound
*/
type CancelWorkflowExecutionNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.MissingResponse `json:"body,omitempty"`
}

// NewCancelWorkflowExecutionNotFound creates CancelWorkflowExecutionNotFound with default headers values
func NewCancelWorkflowExecutionNotFound() *CancelWorkflowExecutionNotFound {

	return &CancelWorkflowExecutionNotFound{}
}

// WithPayload adds the payload to the cancel workflow execution not found response
func (o *CancelWorkflowExecutionNotFound) WithPayload(payload *models.MissingResponse) *CancelWorkflowExecutionNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the cancel workflow execution not found response
func (o *CancelWorkflowExecutionNotFound) SetPayload(payload *models.MissingResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CancelWorkflowExecutionNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CancelWorkflowExecutionInternalServerErrorCode is the HTTP code returned for type CancelWorkflowExecutionInternalServerError
const CancelWorkflowExecutionInternalServerErrorCode int = 500

/*CancelWorkflowExecutionInternalServerError unexpected error

swagger:response cancelWorkflowExecutionInternalServerError
*/
type CancelWorkflowExecutionInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewCancelWorkflowExecutionInternalServerError creates CancelWorkflowExecutionInternalServerError with default headers values
func NewCancelWorkflowExecutionInternalServerError() *CancelWorkflowExecutionInternalServerError {

	return &CancelWorkflowExecutionInternalServerError{}
}

// WithPayload adds the payload to the cancel workflow execution internal server error response
func (o *CancelWorkflowExecutionInternalServerError) WithPayload(payload *models.ErrorResponse) *CancelWorkflowExecutionInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the cancel workflow execution internal server error response
func (o *CancelWorkflowExecutionInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CancelWorkflowExecutionInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
