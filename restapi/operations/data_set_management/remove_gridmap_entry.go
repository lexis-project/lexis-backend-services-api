// Code generated by go-swagger; DO NOT EDIT.

package data_set_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// RemoveGridmapEntryHandlerFunc turns a function with the right signature into a remove gridmap entry handler
type RemoveGridmapEntryHandlerFunc func(RemoveGridmapEntryParams, interface{}) middleware.Responder

// Handle executing the request and returning a response
func (fn RemoveGridmapEntryHandlerFunc) Handle(params RemoveGridmapEntryParams, principal interface{}) middleware.Responder {
	return fn(params, principal)
}

// RemoveGridmapEntryHandler interface for that can handle valid remove gridmap entry params
type RemoveGridmapEntryHandler interface {
	Handle(RemoveGridmapEntryParams, interface{}) middleware.Responder
}

// NewRemoveGridmapEntry creates a new http.Handler for the remove gridmap entry operation
func NewRemoveGridmapEntry(ctx *middleware.Context, handler RemoveGridmapEntryHandler) *RemoveGridmapEntry {
	return &RemoveGridmapEntry{Context: ctx, Handler: handler}
}

/*RemoveGridmapEntry swagger:route DELETE /dataset/gridftp/gridmap dataSetManagement gridftp removeGridmapEntry

Remove a DN entry to the DDI B2STAGE GridFTP service

Remove a DN entry to the DDI B2STAGE GridFTP service

*/
type RemoveGridmapEntry struct {
	Context *middleware.Context
	Handler RemoveGridmapEntryHandler
}

func (o *RemoveGridmapEntry) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewRemoveGridmapEntryParams()

	uprinc, aCtx, err := o.Context.Authorize(r, route)
	if err != nil {
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}
	if aCtx != nil {
		r = aCtx
	}
	var principal interface{}
	if uprinc != nil {
		principal = uprinc
	}

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params, principal) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

// RemoveGridmapEntryBody remove gridmap entry body
//
// swagger:model RemoveGridmapEntryBody
type RemoveGridmapEntryBody struct {

	// user
	User string `json:"user,omitempty"`
}

// Validate validates this remove gridmap entry body
func (o *RemoveGridmapEntryBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *RemoveGridmapEntryBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *RemoveGridmapEntryBody) UnmarshalBinary(b []byte) error {
	var res RemoveGridmapEntryBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
