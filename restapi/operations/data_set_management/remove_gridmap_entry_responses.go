// Code generated by go-swagger; DO NOT EDIT.

package data_set_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/lexis-project/lexis-backend-services-api.git/models"
)

// RemoveGridmapEntryNoContentCode is the HTTP code returned for type RemoveGridmapEntryNoContent
const RemoveGridmapEntryNoContentCode int = 204

/*RemoveGridmapEntryNoContent DN removed

swagger:response removeGridmapEntryNoContent
*/
type RemoveGridmapEntryNoContent struct {
}

// NewRemoveGridmapEntryNoContent creates RemoveGridmapEntryNoContent with default headers values
func NewRemoveGridmapEntryNoContent() *RemoveGridmapEntryNoContent {

	return &RemoveGridmapEntryNoContent{}
}

// WriteResponse to the client
func (o *RemoveGridmapEntryNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// RemoveGridmapEntryUnauthorizedCode is the HTTP code returned for type RemoveGridmapEntryUnauthorized
const RemoveGridmapEntryUnauthorizedCode int = 401

/*RemoveGridmapEntryUnauthorized Unauthorized

swagger:response removeGridmapEntryUnauthorized
*/
type RemoveGridmapEntryUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewRemoveGridmapEntryUnauthorized creates RemoveGridmapEntryUnauthorized with default headers values
func NewRemoveGridmapEntryUnauthorized() *RemoveGridmapEntryUnauthorized {

	return &RemoveGridmapEntryUnauthorized{}
}

// WithPayload adds the payload to the remove gridmap entry unauthorized response
func (o *RemoveGridmapEntryUnauthorized) WithPayload(payload *models.ErrorResponse) *RemoveGridmapEntryUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the remove gridmap entry unauthorized response
func (o *RemoveGridmapEntryUnauthorized) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RemoveGridmapEntryUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RemoveGridmapEntryForbiddenCode is the HTTP code returned for type RemoveGridmapEntryForbidden
const RemoveGridmapEntryForbiddenCode int = 403

/*RemoveGridmapEntryForbidden Forbidden

swagger:response removeGridmapEntryForbidden
*/
type RemoveGridmapEntryForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewRemoveGridmapEntryForbidden creates RemoveGridmapEntryForbidden with default headers values
func NewRemoveGridmapEntryForbidden() *RemoveGridmapEntryForbidden {

	return &RemoveGridmapEntryForbidden{}
}

// WithPayload adds the payload to the remove gridmap entry forbidden response
func (o *RemoveGridmapEntryForbidden) WithPayload(payload *models.ErrorResponse) *RemoveGridmapEntryForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the remove gridmap entry forbidden response
func (o *RemoveGridmapEntryForbidden) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RemoveGridmapEntryForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RemoveGridmapEntryBadGatewayCode is the HTTP code returned for type RemoveGridmapEntryBadGateway
const RemoveGridmapEntryBadGatewayCode int = 502

/*RemoveGridmapEntryBadGateway Bad Gateway

swagger:response removeGridmapEntryBadGateway
*/
type RemoveGridmapEntryBadGateway struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewRemoveGridmapEntryBadGateway creates RemoveGridmapEntryBadGateway with default headers values
func NewRemoveGridmapEntryBadGateway() *RemoveGridmapEntryBadGateway {

	return &RemoveGridmapEntryBadGateway{}
}

// WithPayload adds the payload to the remove gridmap entry bad gateway response
func (o *RemoveGridmapEntryBadGateway) WithPayload(payload *models.ErrorResponse) *RemoveGridmapEntryBadGateway {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the remove gridmap entry bad gateway response
func (o *RemoveGridmapEntryBadGateway) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RemoveGridmapEntryBadGateway) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(502)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RemoveGridmapEntryServiceUnavailableCode is the HTTP code returned for type RemoveGridmapEntryServiceUnavailable
const RemoveGridmapEntryServiceUnavailableCode int = 503

/*RemoveGridmapEntryServiceUnavailable Server error

swagger:response removeGridmapEntryServiceUnavailable
*/
type RemoveGridmapEntryServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewRemoveGridmapEntryServiceUnavailable creates RemoveGridmapEntryServiceUnavailable with default headers values
func NewRemoveGridmapEntryServiceUnavailable() *RemoveGridmapEntryServiceUnavailable {

	return &RemoveGridmapEntryServiceUnavailable{}
}

// WithPayload adds the payload to the remove gridmap entry service unavailable response
func (o *RemoveGridmapEntryServiceUnavailable) WithPayload(payload *models.ErrorResponse) *RemoveGridmapEntryServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the remove gridmap entry service unavailable response
func (o *RemoveGridmapEntryServiceUnavailable) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RemoveGridmapEntryServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
