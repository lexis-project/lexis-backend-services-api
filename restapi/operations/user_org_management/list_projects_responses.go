// Code generated by go-swagger; DO NOT EDIT.

package user_org_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/lexis-project/lexis-backend-services-api.git/models"
)

// ListProjectsOKCode is the HTTP code returned for type ListProjectsOK
const ListProjectsOKCode int = 200

/*ListProjectsOK list of projectss

swagger:response listProjectsOK
*/
type ListProjectsOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Project `json:"body,omitempty"`
}

// NewListProjectsOK creates ListProjectsOK with default headers values
func NewListProjectsOK() *ListProjectsOK {

	return &ListProjectsOK{}
}

// WithPayload adds the payload to the list projects o k response
func (o *ListProjectsOK) WithPayload(payload []*models.Project) *ListProjectsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list projects o k response
func (o *ListProjectsOK) SetPayload(payload []*models.Project) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListProjectsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Project, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// ListProjectsUnauthorizedCode is the HTTP code returned for type ListProjectsUnauthorized
const ListProjectsUnauthorizedCode int = 401

/*ListProjectsUnauthorized Unauthorized

swagger:response listProjectsUnauthorized
*/
type ListProjectsUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewListProjectsUnauthorized creates ListProjectsUnauthorized with default headers values
func NewListProjectsUnauthorized() *ListProjectsUnauthorized {

	return &ListProjectsUnauthorized{}
}

// WithPayload adds the payload to the list projects unauthorized response
func (o *ListProjectsUnauthorized) WithPayload(payload *models.ErrorResponse) *ListProjectsUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list projects unauthorized response
func (o *ListProjectsUnauthorized) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListProjectsUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ListProjectsForbiddenCode is the HTTP code returned for type ListProjectsForbidden
const ListProjectsForbiddenCode int = 403

/*ListProjectsForbidden Forbidden

swagger:response listProjectsForbidden
*/
type ListProjectsForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewListProjectsForbidden creates ListProjectsForbidden with default headers values
func NewListProjectsForbidden() *ListProjectsForbidden {

	return &ListProjectsForbidden{}
}

// WithPayload adds the payload to the list projects forbidden response
func (o *ListProjectsForbidden) WithPayload(payload *models.ErrorResponse) *ListProjectsForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list projects forbidden response
func (o *ListProjectsForbidden) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListProjectsForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ListProjectsInternalServerErrorCode is the HTTP code returned for type ListProjectsInternalServerError
const ListProjectsInternalServerErrorCode int = 500

/*ListProjectsInternalServerError unexpected error

swagger:response listProjectsInternalServerError
*/
type ListProjectsInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewListProjectsInternalServerError creates ListProjectsInternalServerError with default headers values
func NewListProjectsInternalServerError() *ListProjectsInternalServerError {

	return &ListProjectsInternalServerError{}
}

// WithPayload adds the payload to the list projects internal server error response
func (o *ListProjectsInternalServerError) WithPayload(payload *models.ErrorResponse) *ListProjectsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list projects internal server error response
func (o *ListProjectsInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListProjectsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
