// Code generated by go-swagger; DO NOT EDIT.

package user_org_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/lexis-project/lexis-backend-services-api.git/models"
)

// UpdateHPCResourceOKCode is the HTTP code returned for type UpdateHPCResourceOK
const UpdateHPCResourceOKCode int = 200

/*UpdateHPCResourceOK updated HPCResource

swagger:response updateHPCResourceOK
*/
type UpdateHPCResourceOK struct {

	/*
	  In: Body
	*/
	Payload *models.HPCResource `json:"body,omitempty"`
}

// NewUpdateHPCResourceOK creates UpdateHPCResourceOK with default headers values
func NewUpdateHPCResourceOK() *UpdateHPCResourceOK {

	return &UpdateHPCResourceOK{}
}

// WithPayload adds the payload to the update h p c resource o k response
func (o *UpdateHPCResourceOK) WithPayload(payload *models.HPCResource) *UpdateHPCResourceOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update h p c resource o k response
func (o *UpdateHPCResourceOK) SetPayload(payload *models.HPCResource) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateHPCResourceOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateHPCResourceUnauthorizedCode is the HTTP code returned for type UpdateHPCResourceUnauthorized
const UpdateHPCResourceUnauthorizedCode int = 401

/*UpdateHPCResourceUnauthorized Unauthorized

swagger:response updateHPCResourceUnauthorized
*/
type UpdateHPCResourceUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewUpdateHPCResourceUnauthorized creates UpdateHPCResourceUnauthorized with default headers values
func NewUpdateHPCResourceUnauthorized() *UpdateHPCResourceUnauthorized {

	return &UpdateHPCResourceUnauthorized{}
}

// WithPayload adds the payload to the update h p c resource unauthorized response
func (o *UpdateHPCResourceUnauthorized) WithPayload(payload *models.ErrorResponse) *UpdateHPCResourceUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update h p c resource unauthorized response
func (o *UpdateHPCResourceUnauthorized) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateHPCResourceUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateHPCResourceForbiddenCode is the HTTP code returned for type UpdateHPCResourceForbidden
const UpdateHPCResourceForbiddenCode int = 403

/*UpdateHPCResourceForbidden Forbidden

swagger:response updateHPCResourceForbidden
*/
type UpdateHPCResourceForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewUpdateHPCResourceForbidden creates UpdateHPCResourceForbidden with default headers values
func NewUpdateHPCResourceForbidden() *UpdateHPCResourceForbidden {

	return &UpdateHPCResourceForbidden{}
}

// WithPayload adds the payload to the update h p c resource forbidden response
func (o *UpdateHPCResourceForbidden) WithPayload(payload *models.ErrorResponse) *UpdateHPCResourceForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update h p c resource forbidden response
func (o *UpdateHPCResourceForbidden) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateHPCResourceForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateHPCResourceNotFoundCode is the HTTP code returned for type UpdateHPCResourceNotFound
const UpdateHPCResourceNotFoundCode int = 404

/*UpdateHPCResourceNotFound HPCResource with not found

swagger:response updateHPCResourceNotFound
*/
type UpdateHPCResourceNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewUpdateHPCResourceNotFound creates UpdateHPCResourceNotFound with default headers values
func NewUpdateHPCResourceNotFound() *UpdateHPCResourceNotFound {

	return &UpdateHPCResourceNotFound{}
}

// WithPayload adds the payload to the update h p c resource not found response
func (o *UpdateHPCResourceNotFound) WithPayload(payload *models.ErrorResponse) *UpdateHPCResourceNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update h p c resource not found response
func (o *UpdateHPCResourceNotFound) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateHPCResourceNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateHPCResourceInternalServerErrorCode is the HTTP code returned for type UpdateHPCResourceInternalServerError
const UpdateHPCResourceInternalServerErrorCode int = 500

/*UpdateHPCResourceInternalServerError unexpected error

swagger:response updateHPCResourceInternalServerError
*/
type UpdateHPCResourceInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewUpdateHPCResourceInternalServerError creates UpdateHPCResourceInternalServerError with default headers values
func NewUpdateHPCResourceInternalServerError() *UpdateHPCResourceInternalServerError {

	return &UpdateHPCResourceInternalServerError{}
}

// WithPayload adds the payload to the update h p c resource internal server error response
func (o *UpdateHPCResourceInternalServerError) WithPayload(payload *models.ErrorResponse) *UpdateHPCResourceInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update h p c resource internal server error response
func (o *UpdateHPCResourceInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateHPCResourceInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
