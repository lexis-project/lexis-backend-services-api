// Code generated by go-swagger; DO NOT EDIT.

package user_org_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/lexis-project/lexis-backend-services-api.git/models"
)

// GetOrganizationOKCode is the HTTP code returned for type GetOrganizationOK
const GetOrganizationOKCode int = 200

/*GetOrganizationOK organization returned

swagger:response getOrganizationOK
*/
type GetOrganizationOK struct {

	/*
	  In: Body
	*/
	Payload *models.Organization `json:"body,omitempty"`
}

// NewGetOrganizationOK creates GetOrganizationOK with default headers values
func NewGetOrganizationOK() *GetOrganizationOK {

	return &GetOrganizationOK{}
}

// WithPayload adds the payload to the get organization o k response
func (o *GetOrganizationOK) WithPayload(payload *models.Organization) *GetOrganizationOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get organization o k response
func (o *GetOrganizationOK) SetPayload(payload *models.Organization) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetOrganizationOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetOrganizationUnauthorizedCode is the HTTP code returned for type GetOrganizationUnauthorized
const GetOrganizationUnauthorizedCode int = 401

/*GetOrganizationUnauthorized Unauthorized

swagger:response getOrganizationUnauthorized
*/
type GetOrganizationUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewGetOrganizationUnauthorized creates GetOrganizationUnauthorized with default headers values
func NewGetOrganizationUnauthorized() *GetOrganizationUnauthorized {

	return &GetOrganizationUnauthorized{}
}

// WithPayload adds the payload to the get organization unauthorized response
func (o *GetOrganizationUnauthorized) WithPayload(payload *models.ErrorResponse) *GetOrganizationUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get organization unauthorized response
func (o *GetOrganizationUnauthorized) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetOrganizationUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetOrganizationForbiddenCode is the HTTP code returned for type GetOrganizationForbidden
const GetOrganizationForbiddenCode int = 403

/*GetOrganizationForbidden Forbidden

swagger:response getOrganizationForbidden
*/
type GetOrganizationForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewGetOrganizationForbidden creates GetOrganizationForbidden with default headers values
func NewGetOrganizationForbidden() *GetOrganizationForbidden {

	return &GetOrganizationForbidden{}
}

// WithPayload adds the payload to the get organization forbidden response
func (o *GetOrganizationForbidden) WithPayload(payload *models.ErrorResponse) *GetOrganizationForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get organization forbidden response
func (o *GetOrganizationForbidden) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetOrganizationForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetOrganizationNotFoundCode is the HTTP code returned for type GetOrganizationNotFound
const GetOrganizationNotFoundCode int = 404

/*GetOrganizationNotFound organization with organizationId not found

swagger:response getOrganizationNotFound
*/
type GetOrganizationNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewGetOrganizationNotFound creates GetOrganizationNotFound with default headers values
func NewGetOrganizationNotFound() *GetOrganizationNotFound {

	return &GetOrganizationNotFound{}
}

// WithPayload adds the payload to the get organization not found response
func (o *GetOrganizationNotFound) WithPayload(payload *models.ErrorResponse) *GetOrganizationNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get organization not found response
func (o *GetOrganizationNotFound) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetOrganizationNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetOrganizationInternalServerErrorCode is the HTTP code returned for type GetOrganizationInternalServerError
const GetOrganizationInternalServerErrorCode int = 500

/*GetOrganizationInternalServerError unexpected error

swagger:response getOrganizationInternalServerError
*/
type GetOrganizationInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewGetOrganizationInternalServerError creates GetOrganizationInternalServerError with default headers values
func NewGetOrganizationInternalServerError() *GetOrganizationInternalServerError {

	return &GetOrganizationInternalServerError{}
}

// WithPayload adds the payload to the get organization internal server error response
func (o *GetOrganizationInternalServerError) WithPayload(payload *models.ErrorResponse) *GetOrganizationInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get organization internal server error response
func (o *GetOrganizationInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetOrganizationInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
