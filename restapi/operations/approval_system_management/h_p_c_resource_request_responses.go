// Code generated by go-swagger; DO NOT EDIT.

package approval_system_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/lexis-project/lexis-backend-services-api.git/models"
)

// HPCResourceRequestOKCode is the HTTP code returned for type HPCResourceRequestOK
const HPCResourceRequestOKCode int = 200

/*HPCResourceRequestOK HPC resource request

swagger:response hPCResourceRequestOK
*/
type HPCResourceRequestOK struct {

	/*
	  In: Body
	*/
	Payload *models.ApprovalSystemResourceRequest `json:"body,omitempty"`
}

// NewHPCResourceRequestOK creates HPCResourceRequestOK with default headers values
func NewHPCResourceRequestOK() *HPCResourceRequestOK {

	return &HPCResourceRequestOK{}
}

// WithPayload adds the payload to the h p c resource request o k response
func (o *HPCResourceRequestOK) WithPayload(payload *models.ApprovalSystemResourceRequest) *HPCResourceRequestOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the h p c resource request o k response
func (o *HPCResourceRequestOK) SetPayload(payload *models.ApprovalSystemResourceRequest) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *HPCResourceRequestOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// HPCResourceRequestNotFoundCode is the HTTP code returned for type HPCResourceRequestNotFound
const HPCResourceRequestNotFoundCode int = 404

/*HPCResourceRequestNotFound Resource request not found.

swagger:response hPCResourceRequestNotFound
*/
type HPCResourceRequestNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ApprovalSystemMissingResponse `json:"body,omitempty"`
}

// NewHPCResourceRequestNotFound creates HPCResourceRequestNotFound with default headers values
func NewHPCResourceRequestNotFound() *HPCResourceRequestNotFound {

	return &HPCResourceRequestNotFound{}
}

// WithPayload adds the payload to the h p c resource request not found response
func (o *HPCResourceRequestNotFound) WithPayload(payload *models.ApprovalSystemMissingResponse) *HPCResourceRequestNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the h p c resource request not found response
func (o *HPCResourceRequestNotFound) SetPayload(payload *models.ApprovalSystemMissingResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *HPCResourceRequestNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// HPCResourceRequestInternalServerErrorCode is the HTTP code returned for type HPCResourceRequestInternalServerError
const HPCResourceRequestInternalServerErrorCode int = 500

/*HPCResourceRequestInternalServerError unexpected error

swagger:response hPCResourceRequestInternalServerError
*/
type HPCResourceRequestInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ApprovalSystemErrorResponse `json:"body,omitempty"`
}

// NewHPCResourceRequestInternalServerError creates HPCResourceRequestInternalServerError with default headers values
func NewHPCResourceRequestInternalServerError() *HPCResourceRequestInternalServerError {

	return &HPCResourceRequestInternalServerError{}
}

// WithPayload adds the payload to the h p c resource request internal server error response
func (o *HPCResourceRequestInternalServerError) WithPayload(payload *models.ApprovalSystemErrorResponse) *HPCResourceRequestInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the h p c resource request internal server error response
func (o *HPCResourceRequestInternalServerError) SetPayload(payload *models.ApprovalSystemErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *HPCResourceRequestInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
