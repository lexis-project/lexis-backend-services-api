// Code generated by go-swagger; DO NOT EDIT.

package approval_system_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/lexis-project/lexis-backend-services-api.git/models"
)

// CreateApprovedResourceRequestCreatedCode is the HTTP code returned for type CreateApprovedResourceRequestCreated
const CreateApprovedResourceRequestCreatedCode int = 201

/*CreateApprovedResourceRequestCreated approved resource request created

swagger:response createApprovedResourceRequestCreated
*/
type CreateApprovedResourceRequestCreated struct {

	/*
	  In: Body
	*/
	Payload *models.ApprovalSystemCreatedResponse `json:"body,omitempty"`
}

// NewCreateApprovedResourceRequestCreated creates CreateApprovedResourceRequestCreated with default headers values
func NewCreateApprovedResourceRequestCreated() *CreateApprovedResourceRequestCreated {

	return &CreateApprovedResourceRequestCreated{}
}

// WithPayload adds the payload to the create approved resource request created response
func (o *CreateApprovedResourceRequestCreated) WithPayload(payload *models.ApprovalSystemCreatedResponse) *CreateApprovedResourceRequestCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create approved resource request created response
func (o *CreateApprovedResourceRequestCreated) SetPayload(payload *models.ApprovalSystemCreatedResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateApprovedResourceRequestCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateApprovedResourceRequestBadRequestCode is the HTTP code returned for type CreateApprovedResourceRequestBadRequest
const CreateApprovedResourceRequestBadRequestCode int = 400

/*CreateApprovedResourceRequestBadRequest invalid input, object invalid

swagger:response createApprovedResourceRequestBadRequest
*/
type CreateApprovedResourceRequestBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ApprovalSystemInvalidResponse `json:"body,omitempty"`
}

// NewCreateApprovedResourceRequestBadRequest creates CreateApprovedResourceRequestBadRequest with default headers values
func NewCreateApprovedResourceRequestBadRequest() *CreateApprovedResourceRequestBadRequest {

	return &CreateApprovedResourceRequestBadRequest{}
}

// WithPayload adds the payload to the create approved resource request bad request response
func (o *CreateApprovedResourceRequestBadRequest) WithPayload(payload *models.ApprovalSystemInvalidResponse) *CreateApprovedResourceRequestBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create approved resource request bad request response
func (o *CreateApprovedResourceRequestBadRequest) SetPayload(payload *models.ApprovalSystemInvalidResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateApprovedResourceRequestBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateApprovedResourceRequestNotFoundCode is the HTTP code returned for type CreateApprovedResourceRequestNotFound
const CreateApprovedResourceRequestNotFoundCode int = 404

/*CreateApprovedResourceRequestNotFound Required stuff for resource request creation hasn't been met.

swagger:response createApprovedResourceRequestNotFound
*/
type CreateApprovedResourceRequestNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ApprovalSystemMissingResponse `json:"body,omitempty"`
}

// NewCreateApprovedResourceRequestNotFound creates CreateApprovedResourceRequestNotFound with default headers values
func NewCreateApprovedResourceRequestNotFound() *CreateApprovedResourceRequestNotFound {

	return &CreateApprovedResourceRequestNotFound{}
}

// WithPayload adds the payload to the create approved resource request not found response
func (o *CreateApprovedResourceRequestNotFound) WithPayload(payload *models.ApprovalSystemMissingResponse) *CreateApprovedResourceRequestNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create approved resource request not found response
func (o *CreateApprovedResourceRequestNotFound) SetPayload(payload *models.ApprovalSystemMissingResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateApprovedResourceRequestNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateApprovedResourceRequestInternalServerErrorCode is the HTTP code returned for type CreateApprovedResourceRequestInternalServerError
const CreateApprovedResourceRequestInternalServerErrorCode int = 500

/*CreateApprovedResourceRequestInternalServerError unexpected error

swagger:response createApprovedResourceRequestInternalServerError
*/
type CreateApprovedResourceRequestInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ApprovalSystemErrorResponse `json:"body,omitempty"`
}

// NewCreateApprovedResourceRequestInternalServerError creates CreateApprovedResourceRequestInternalServerError with default headers values
func NewCreateApprovedResourceRequestInternalServerError() *CreateApprovedResourceRequestInternalServerError {

	return &CreateApprovedResourceRequestInternalServerError{}
}

// WithPayload adds the payload to the create approved resource request internal server error response
func (o *CreateApprovedResourceRequestInternalServerError) WithPayload(payload *models.ApprovalSystemErrorResponse) *CreateApprovedResourceRequestInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create approved resource request internal server error response
func (o *CreateApprovedResourceRequestInternalServerError) SetPayload(payload *models.ApprovalSystemErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateApprovedResourceRequestInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
