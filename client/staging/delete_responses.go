// Code generated by go-swagger; DO NOT EDIT.

package staging

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/lexis-project/lexis-backend-services-api.git/models"
)

// DeleteReader is a Reader for the Delete structure.
type DeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewDeleteCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 414:
		result := NewDeleteRequestURITooLong()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeleteTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteCreated creates a DeleteCreated with default headers values
func NewDeleteCreated() *DeleteCreated {
	return &DeleteCreated{}
}

/*DeleteCreated handles this case with default header values.

The response code means that the data deletion has been initiated. Status of the deletion can be checked by querying the status.
*/
type DeleteCreated struct {
	Payload *models.SteeringRequestID
}

func (o *DeleteCreated) Error() string {
	return fmt.Sprintf("[DELETE /dataset/staging/delete][%d] deleteCreated  %+v", 201, o.Payload)
}

func (o *DeleteCreated) GetPayload() *models.SteeringRequestID {
	return o.Payload
}

func (o *DeleteCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SteeringRequestID)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteBadRequest creates a DeleteBadRequest with default headers values
func NewDeleteBadRequest() *DeleteBadRequest {
	return &DeleteBadRequest{}
}

/*DeleteBadRequest handles this case with default header values.

This means that there's something wrong in the input parameters and the server couldn't understand the request.
*/
type DeleteBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *DeleteBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /dataset/staging/delete][%d] deleteBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteUnauthorized creates a DeleteUnauthorized with default headers values
func NewDeleteUnauthorized() *DeleteUnauthorized {
	return &DeleteUnauthorized{}
}

/*DeleteUnauthorized handles this case with default header values.

This means that the user is not authenticated with keycloak and data deletion can't be triggered unless the user first log in with a valid user
*/
type DeleteUnauthorized struct {
	Payload *models.ErrorResponse
}

func (o *DeleteUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /dataset/staging/delete][%d] deleteUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteForbidden creates a DeleteForbidden with default headers values
func NewDeleteForbidden() *DeleteForbidden {
	return &DeleteForbidden{}
}

/*DeleteForbidden handles this case with default header values.

This means that the resource the user is trying to delete from or to is not readable or writable by the user. User doesn't have the correct rights to delete the data on the target system location.
*/
type DeleteForbidden struct {
	Payload *models.ErrorResponse
}

func (o *DeleteForbidden) Error() string {
	return fmt.Sprintf("[DELETE /dataset/staging/delete][%d] deleteForbidden  %+v", 403, o.Payload)
}

func (o *DeleteForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteNotFound creates a DeleteNotFound with default headers values
func NewDeleteNotFound() *DeleteNotFound {
	return &DeleteNotFound{}
}

/*DeleteNotFound handles this case with default header values.

This means that the the target path on the system doesn't exist.
*/
type DeleteNotFound struct {
	Payload *models.ErrorResponse
}

func (o *DeleteNotFound) Error() string {
	return fmt.Sprintf("[DELETE /dataset/staging/delete][%d] deleteNotFound  %+v", 404, o.Payload)
}

func (o *DeleteNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteRequestURITooLong creates a DeleteRequestURITooLong with default headers values
func NewDeleteRequestURITooLong() *DeleteRequestURITooLong {
	return &DeleteRequestURITooLong{}
}

/*DeleteRequestURITooLong handles this case with default header values.

This means that the the target path is longer than the server is willing to interpret.
*/
type DeleteRequestURITooLong struct {
	Payload *models.ErrorResponse
}

func (o *DeleteRequestURITooLong) Error() string {
	return fmt.Sprintf("[DELETE /dataset/staging/delete][%d] deleteRequestUriTooLong  %+v", 414, o.Payload)
}

func (o *DeleteRequestURITooLong) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteRequestURITooLong) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteTooManyRequests creates a DeleteTooManyRequests with default headers values
func NewDeleteTooManyRequests() *DeleteTooManyRequests {
	return &DeleteTooManyRequests{}
}

/*DeleteTooManyRequests handles this case with default header values.

This means that the user has sent too many requests in a given amount of time. The user is advised to wait and send the request again.
*/
type DeleteTooManyRequests struct {
	Payload *models.ErrorResponse
}

func (o *DeleteTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /dataset/staging/delete][%d] deleteTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteTooManyRequests) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteInternalServerError creates a DeleteInternalServerError with default headers values
func NewDeleteInternalServerError() *DeleteInternalServerError {
	return &DeleteInternalServerError{}
}

/*DeleteInternalServerError handles this case with default header values.

This means that something has gone wrong on the data transfer steering server. The user is advised to wait and send the request again.
*/
type DeleteInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *DeleteInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /dataset/staging/delete][%d] deleteInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*DeleteBody delete body
swagger:model DeleteBody
*/
type DeleteBody struct {

	// Possible values are: lrz_iRODS, lrz_staging_area, lrz_staging_area2,
	// lrz_cloud, linux_cluster, superMUC, it4i_iRODS, barbora_lustre,
	// salomon_lustre, barbora_home, salomon_home, it4i_cloud, it4i_staging_area,
	// surf_iRODS, sara_staging_area.
	//
	// Required: true
	TargetPath *string `json:"target_path"`

	// Possible values are: lrz_iRODS, lrz_staging_area, lrz_staging_area2,
	// lrz_cloud, linux_cluster, superMUC, it4i_iRODS, barbora_lustre,
	// salomon_lustre, barbora_home, salomon_home, it4i_cloud, it4i_staging_area,
	// surf_iRODS, sara_staging_area.
	//
	// Required: true
	TargetSystem *string `json:"target_system"`
}

// Validate validates this delete body
func (o *DeleteBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateTargetPath(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateTargetSystem(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *DeleteBody) validateTargetPath(formats strfmt.Registry) error {

	if err := validate.Required("parameters"+"."+"target_path", "body", o.TargetPath); err != nil {
		return err
	}

	return nil
}

func (o *DeleteBody) validateTargetSystem(formats strfmt.Registry) error {

	if err := validate.Required("parameters"+"."+"target_system", "body", o.TargetSystem); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *DeleteBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteBody) UnmarshalBinary(b []byte) error {
	var res DeleteBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
