// Code generated by go-swagger; DO NOT EDIT.

package staging

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewCheckCloudNFSExportAddStatusParams creates a new CheckCloudNFSExportAddStatusParams object
// with the default values initialized.
func NewCheckCloudNFSExportAddStatusParams() *CheckCloudNFSExportAddStatusParams {
	var ()
	return &CheckCloudNFSExportAddStatusParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewCheckCloudNFSExportAddStatusParamsWithTimeout creates a new CheckCloudNFSExportAddStatusParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewCheckCloudNFSExportAddStatusParamsWithTimeout(timeout time.Duration) *CheckCloudNFSExportAddStatusParams {
	var ()
	return &CheckCloudNFSExportAddStatusParams{

		timeout: timeout,
	}
}

// NewCheckCloudNFSExportAddStatusParamsWithContext creates a new CheckCloudNFSExportAddStatusParams object
// with the default values initialized, and the ability to set a context for a request
func NewCheckCloudNFSExportAddStatusParamsWithContext(ctx context.Context) *CheckCloudNFSExportAddStatusParams {
	var ()
	return &CheckCloudNFSExportAddStatusParams{

		Context: ctx,
	}
}

// NewCheckCloudNFSExportAddStatusParamsWithHTTPClient creates a new CheckCloudNFSExportAddStatusParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewCheckCloudNFSExportAddStatusParamsWithHTTPClient(client *http.Client) *CheckCloudNFSExportAddStatusParams {
	var ()
	return &CheckCloudNFSExportAddStatusParams{
		HTTPClient: client,
	}
}

/*CheckCloudNFSExportAddStatusParams contains all the parameters to send to the API endpoint
for the check cloud n f s export add status operation typically these are written to a http.Request
*/
type CheckCloudNFSExportAddStatusParams struct {

	/*Param
	  queue identifier returned by a POST request at /cloud/add/{param}

	*/
	Param string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the check cloud n f s export add status params
func (o *CheckCloudNFSExportAddStatusParams) WithTimeout(timeout time.Duration) *CheckCloudNFSExportAddStatusParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the check cloud n f s export add status params
func (o *CheckCloudNFSExportAddStatusParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the check cloud n f s export add status params
func (o *CheckCloudNFSExportAddStatusParams) WithContext(ctx context.Context) *CheckCloudNFSExportAddStatusParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the check cloud n f s export add status params
func (o *CheckCloudNFSExportAddStatusParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the check cloud n f s export add status params
func (o *CheckCloudNFSExportAddStatusParams) WithHTTPClient(client *http.Client) *CheckCloudNFSExportAddStatusParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the check cloud n f s export add status params
func (o *CheckCloudNFSExportAddStatusParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithParam adds the param to the check cloud n f s export add status params
func (o *CheckCloudNFSExportAddStatusParams) WithParam(param string) *CheckCloudNFSExportAddStatusParams {
	o.SetParam(param)
	return o
}

// SetParam adds the param to the check cloud n f s export add status params
func (o *CheckCloudNFSExportAddStatusParams) SetParam(param string) {
	o.Param = param
}

// WriteToRequest writes these params to a swagger request
func (o *CheckCloudNFSExportAddStatusParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param param
	if err := r.SetPathParam("param", o.Param); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
