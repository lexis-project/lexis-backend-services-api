// Code generated by go-swagger; DO NOT EDIT.

package staging

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/lexis-project/lexis-backend-services-api.git/models"
)

// CheckDeletionStatusReader is a Reader for the CheckDeletionStatus structure.
type CheckDeletionStatusReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CheckDeletionStatusReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCheckDeletionStatusOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCheckDeletionStatusBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCheckDeletionStatusUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCheckDeletionStatusNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 414:
		result := NewCheckDeletionStatusRequestURITooLong()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCheckDeletionStatusInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCheckDeletionStatusOK creates a CheckDeletionStatusOK with default headers values
func NewCheckDeletionStatusOK() *CheckDeletionStatusOK {
	return &CheckDeletionStatusOK{}
}

/*CheckDeletionStatusOK handles this case with default header values.

This means that the status has been returned to the user in the response body.
*/
type CheckDeletionStatusOK struct {
	Payload *CheckDeletionStatusOKBody
}

func (o *CheckDeletionStatusOK) Error() string {
	return fmt.Sprintf("[GET /dataset/staging/delete/{request_id}][%d] checkDeletionStatusOK  %+v", 200, o.Payload)
}

func (o *CheckDeletionStatusOK) GetPayload() *CheckDeletionStatusOKBody {
	return o.Payload
}

func (o *CheckDeletionStatusOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CheckDeletionStatusOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCheckDeletionStatusBadRequest creates a CheckDeletionStatusBadRequest with default headers values
func NewCheckDeletionStatusBadRequest() *CheckDeletionStatusBadRequest {
	return &CheckDeletionStatusBadRequest{}
}

/*CheckDeletionStatusBadRequest handles this case with default header values.

This means that the request ID given by the user is incorrect.
*/
type CheckDeletionStatusBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *CheckDeletionStatusBadRequest) Error() string {
	return fmt.Sprintf("[GET /dataset/staging/delete/{request_id}][%d] checkDeletionStatusBadRequest  %+v", 400, o.Payload)
}

func (o *CheckDeletionStatusBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CheckDeletionStatusBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCheckDeletionStatusUnauthorized creates a CheckDeletionStatusUnauthorized with default headers values
func NewCheckDeletionStatusUnauthorized() *CheckDeletionStatusUnauthorized {
	return &CheckDeletionStatusUnauthorized{}
}

/*CheckDeletionStatusUnauthorized handles this case with default header values.

This means that the user is not authenticated with keycloak and data transfer can't be triggered unless the user first log in with a valid user
*/
type CheckDeletionStatusUnauthorized struct {
	Payload *models.ErrorResponse
}

func (o *CheckDeletionStatusUnauthorized) Error() string {
	return fmt.Sprintf("[GET /dataset/staging/delete/{request_id}][%d] checkDeletionStatusUnauthorized  %+v", 401, o.Payload)
}

func (o *CheckDeletionStatusUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CheckDeletionStatusUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCheckDeletionStatusNotFound creates a CheckDeletionStatusNotFound with default headers values
func NewCheckDeletionStatusNotFound() *CheckDeletionStatusNotFound {
	return &CheckDeletionStatusNotFound{}
}

/*CheckDeletionStatusNotFound handles this case with default header values.

This means that the ID doesn't exist and thus a status can't be returned.
*/
type CheckDeletionStatusNotFound struct {
	Payload *models.ErrorResponse
}

func (o *CheckDeletionStatusNotFound) Error() string {
	return fmt.Sprintf("[GET /dataset/staging/delete/{request_id}][%d] checkDeletionStatusNotFound  %+v", 404, o.Payload)
}

func (o *CheckDeletionStatusNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CheckDeletionStatusNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCheckDeletionStatusRequestURITooLong creates a CheckDeletionStatusRequestURITooLong with default headers values
func NewCheckDeletionStatusRequestURITooLong() *CheckDeletionStatusRequestURITooLong {
	return &CheckDeletionStatusRequestURITooLong{}
}

/*CheckDeletionStatusRequestURITooLong handles this case with default header values.

This means that the the request ID is longer than the server is willing to interpret.
*/
type CheckDeletionStatusRequestURITooLong struct {
	Payload *models.ErrorResponse
}

func (o *CheckDeletionStatusRequestURITooLong) Error() string {
	return fmt.Sprintf("[GET /dataset/staging/delete/{request_id}][%d] checkDeletionStatusRequestUriTooLong  %+v", 414, o.Payload)
}

func (o *CheckDeletionStatusRequestURITooLong) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CheckDeletionStatusRequestURITooLong) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCheckDeletionStatusInternalServerError creates a CheckDeletionStatusInternalServerError with default headers values
func NewCheckDeletionStatusInternalServerError() *CheckDeletionStatusInternalServerError {
	return &CheckDeletionStatusInternalServerError{}
}

/*CheckDeletionStatusInternalServerError handles this case with default header values.

This means that something has gone wrong on the data transfer steering server. The user is advised to wait and send the request again.
*/
type CheckDeletionStatusInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *CheckDeletionStatusInternalServerError) Error() string {
	return fmt.Sprintf("[GET /dataset/staging/delete/{request_id}][%d] checkDeletionStatusInternalServerError  %+v", 500, o.Payload)
}

func (o *CheckDeletionStatusInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CheckDeletionStatusInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*CheckDeletionStatusOKBody check deletion status o k body
swagger:model CheckDeletionStatusOKBody
*/
type CheckDeletionStatusOKBody struct {

	// status
	// Required: true
	Status *string `json:"status"`
}

// Validate validates this check deletion status o k body
func (o *CheckDeletionStatusOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateStatus(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CheckDeletionStatusOKBody) validateStatus(formats strfmt.Registry) error {

	if err := validate.Required("checkDeletionStatusOK"+"."+"status", "body", o.Status); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CheckDeletionStatusOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CheckDeletionStatusOKBody) UnmarshalBinary(b []byte) error {
	var res CheckDeletionStatusOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
