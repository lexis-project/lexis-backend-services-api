// Code generated by go-swagger; DO NOT EDIT.

package user_org_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/lexis-project/lexis-backend-services-api.git/models"
)

// NewCreateHPCResourceParams creates a new CreateHPCResourceParams object
// with the default values initialized.
func NewCreateHPCResourceParams() *CreateHPCResourceParams {
	var ()
	return &CreateHPCResourceParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewCreateHPCResourceParamsWithTimeout creates a new CreateHPCResourceParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewCreateHPCResourceParamsWithTimeout(timeout time.Duration) *CreateHPCResourceParams {
	var ()
	return &CreateHPCResourceParams{

		timeout: timeout,
	}
}

// NewCreateHPCResourceParamsWithContext creates a new CreateHPCResourceParams object
// with the default values initialized, and the ability to set a context for a request
func NewCreateHPCResourceParamsWithContext(ctx context.Context) *CreateHPCResourceParams {
	var ()
	return &CreateHPCResourceParams{

		Context: ctx,
	}
}

// NewCreateHPCResourceParamsWithHTTPClient creates a new CreateHPCResourceParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewCreateHPCResourceParamsWithHTTPClient(client *http.Client) *CreateHPCResourceParams {
	var ()
	return &CreateHPCResourceParams{
		HTTPClient: client,
	}
}

/*CreateHPCResourceParams contains all the parameters to send to the API endpoint
for the create h p c resource operation typically these are written to a http.Request
*/
type CreateHPCResourceParams struct {

	/*HPCResource
	  HPCResource to be added

	*/
	HPCResource *models.HPCResource

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the create h p c resource params
func (o *CreateHPCResourceParams) WithTimeout(timeout time.Duration) *CreateHPCResourceParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the create h p c resource params
func (o *CreateHPCResourceParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the create h p c resource params
func (o *CreateHPCResourceParams) WithContext(ctx context.Context) *CreateHPCResourceParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the create h p c resource params
func (o *CreateHPCResourceParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the create h p c resource params
func (o *CreateHPCResourceParams) WithHTTPClient(client *http.Client) *CreateHPCResourceParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the create h p c resource params
func (o *CreateHPCResourceParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithHPCResource adds the hPCResource to the create h p c resource params
func (o *CreateHPCResourceParams) WithHPCResource(hPCResource *models.HPCResource) *CreateHPCResourceParams {
	o.SetHPCResource(hPCResource)
	return o
}

// SetHPCResource adds the hPCResource to the create h p c resource params
func (o *CreateHPCResourceParams) SetHPCResource(hPCResource *models.HPCResource) {
	o.HPCResource = hPCResource
}

// WriteToRequest writes these params to a swagger request
func (o *CreateHPCResourceParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.HPCResource != nil {
		if err := r.SetBodyParam(o.HPCResource); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
