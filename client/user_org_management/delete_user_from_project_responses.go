// Code generated by go-swagger; DO NOT EDIT.

package user_org_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/lexis-project/lexis-backend-services-api.git/models"
)

// DeleteUserFromProjectReader is a Reader for the DeleteUserFromProject structure.
type DeleteUserFromProjectReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteUserFromProjectReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteUserFromProjectOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeleteUserFromProjectUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteUserFromProjectForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteUserFromProjectNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteUserFromProjectInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteUserFromProjectOK creates a DeleteUserFromProjectOK with default headers values
func NewDeleteUserFromProjectOK() *DeleteUserFromProjectOK {
	return &DeleteUserFromProjectOK{}
}

/*DeleteUserFromProjectOK handles this case with default header values.

deleted user from project
*/
type DeleteUserFromProjectOK struct {
	Payload *models.DeletedResponse
}

func (o *DeleteUserFromProjectOK) Error() string {
	return fmt.Sprintf("[DELETE /project/{id}/user/{userID}][%d] deleteUserFromProjectOK  %+v", 200, o.Payload)
}

func (o *DeleteUserFromProjectOK) GetPayload() *models.DeletedResponse {
	return o.Payload
}

func (o *DeleteUserFromProjectOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DeletedResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteUserFromProjectUnauthorized creates a DeleteUserFromProjectUnauthorized with default headers values
func NewDeleteUserFromProjectUnauthorized() *DeleteUserFromProjectUnauthorized {
	return &DeleteUserFromProjectUnauthorized{}
}

/*DeleteUserFromProjectUnauthorized handles this case with default header values.

Authorization error
*/
type DeleteUserFromProjectUnauthorized struct {
	Payload *models.ErrorResponse
}

func (o *DeleteUserFromProjectUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /project/{id}/user/{userID}][%d] deleteUserFromProjectUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteUserFromProjectUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteUserFromProjectUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteUserFromProjectForbidden creates a DeleteUserFromProjectForbidden with default headers values
func NewDeleteUserFromProjectForbidden() *DeleteUserFromProjectForbidden {
	return &DeleteUserFromProjectForbidden{}
}

/*DeleteUserFromProjectForbidden handles this case with default header values.

Authorization error
*/
type DeleteUserFromProjectForbidden struct {
	Payload *models.ErrorResponse
}

func (o *DeleteUserFromProjectForbidden) Error() string {
	return fmt.Sprintf("[DELETE /project/{id}/user/{userID}][%d] deleteUserFromProjectForbidden  %+v", 403, o.Payload)
}

func (o *DeleteUserFromProjectForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteUserFromProjectForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteUserFromProjectNotFound creates a DeleteUserFromProjectNotFound with default headers values
func NewDeleteUserFromProjectNotFound() *DeleteUserFromProjectNotFound {
	return &DeleteUserFromProjectNotFound{}
}

/*DeleteUserFromProjectNotFound handles this case with default header values.

project or user not found
*/
type DeleteUserFromProjectNotFound struct {
	Payload *models.ErrorResponse
}

func (o *DeleteUserFromProjectNotFound) Error() string {
	return fmt.Sprintf("[DELETE /project/{id}/user/{userID}][%d] deleteUserFromProjectNotFound  %+v", 404, o.Payload)
}

func (o *DeleteUserFromProjectNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteUserFromProjectNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteUserFromProjectInternalServerError creates a DeleteUserFromProjectInternalServerError with default headers values
func NewDeleteUserFromProjectInternalServerError() *DeleteUserFromProjectInternalServerError {
	return &DeleteUserFromProjectInternalServerError{}
}

/*DeleteUserFromProjectInternalServerError handles this case with default header values.

unexpected error
*/
type DeleteUserFromProjectInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *DeleteUserFromProjectInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /project/{id}/user/{userID}][%d] deleteUserFromProjectInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteUserFromProjectInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteUserFromProjectInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
