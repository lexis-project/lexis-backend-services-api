// Code generated by go-swagger; DO NOT EDIT.

package data_set_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/lexis-project/lexis-backend-services-api.git/models"
)

// DeleteDatasetReader is a Reader for the DeleteDataset structure.
type DeleteDatasetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteDatasetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewDeleteDatasetCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewDeleteDatasetNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteDatasetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteDatasetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteDatasetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteDatasetInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 502:
		result := NewDeleteDatasetBadGateway()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewDeleteDatasetServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteDatasetCreated creates a DeleteDatasetCreated with default headers values
func NewDeleteDatasetCreated() *DeleteDatasetCreated {
	return &DeleteDatasetCreated{}
}

/*DeleteDatasetCreated handles this case with default header values.

The delete request was enqueued. StagingAPI and requestID can be concatenated to obtain a query URL about this request.
*/
type DeleteDatasetCreated struct {
	Payload *DeleteDatasetCreatedBody
}

func (o *DeleteDatasetCreated) Error() string {
	return fmt.Sprintf("[DELETE /dataset][%d] deleteDatasetCreated  %+v", 201, o.Payload)
}

func (o *DeleteDatasetCreated) GetPayload() *DeleteDatasetCreatedBody {
	return o.Payload
}

func (o *DeleteDatasetCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(DeleteDatasetCreatedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteDatasetNoContent creates a DeleteDatasetNoContent with default headers values
func NewDeleteDatasetNoContent() *DeleteDatasetNoContent {
	return &DeleteDatasetNoContent{}
}

/*DeleteDatasetNoContent handles this case with default header values.

Dataset does not exist
*/
type DeleteDatasetNoContent struct {
}

func (o *DeleteDatasetNoContent) Error() string {
	return fmt.Sprintf("[DELETE /dataset][%d] deleteDatasetNoContent ", 204)
}

func (o *DeleteDatasetNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDatasetBadRequest creates a DeleteDatasetBadRequest with default headers values
func NewDeleteDatasetBadRequest() *DeleteDatasetBadRequest {
	return &DeleteDatasetBadRequest{}
}

/*DeleteDatasetBadRequest handles this case with default header values.

Malformed Request
*/
type DeleteDatasetBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *DeleteDatasetBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /dataset][%d] deleteDatasetBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteDatasetBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteDatasetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteDatasetUnauthorized creates a DeleteDatasetUnauthorized with default headers values
func NewDeleteDatasetUnauthorized() *DeleteDatasetUnauthorized {
	return &DeleteDatasetUnauthorized{}
}

/*DeleteDatasetUnauthorized handles this case with default header values.

Unauthorized
*/
type DeleteDatasetUnauthorized struct {
	Payload *models.ErrorResponse
}

func (o *DeleteDatasetUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /dataset][%d] deleteDatasetUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteDatasetUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteDatasetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteDatasetForbidden creates a DeleteDatasetForbidden with default headers values
func NewDeleteDatasetForbidden() *DeleteDatasetForbidden {
	return &DeleteDatasetForbidden{}
}

/*DeleteDatasetForbidden handles this case with default header values.

Forbidden
*/
type DeleteDatasetForbidden struct {
	Payload *models.ErrorResponse
}

func (o *DeleteDatasetForbidden) Error() string {
	return fmt.Sprintf("[DELETE /dataset][%d] deleteDatasetForbidden  %+v", 403, o.Payload)
}

func (o *DeleteDatasetForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteDatasetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteDatasetInternalServerError creates a DeleteDatasetInternalServerError with default headers values
func NewDeleteDatasetInternalServerError() *DeleteDatasetInternalServerError {
	return &DeleteDatasetInternalServerError{}
}

/*DeleteDatasetInternalServerError handles this case with default header values.

Internal error processing request
*/
type DeleteDatasetInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *DeleteDatasetInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /dataset][%d] deleteDatasetInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteDatasetInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteDatasetInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteDatasetBadGateway creates a DeleteDatasetBadGateway with default headers values
func NewDeleteDatasetBadGateway() *DeleteDatasetBadGateway {
	return &DeleteDatasetBadGateway{}
}

/*DeleteDatasetBadGateway handles this case with default header values.

Bad Gateway
*/
type DeleteDatasetBadGateway struct {
	Payload *models.ErrorResponse
}

func (o *DeleteDatasetBadGateway) Error() string {
	return fmt.Sprintf("[DELETE /dataset][%d] deleteDatasetBadGateway  %+v", 502, o.Payload)
}

func (o *DeleteDatasetBadGateway) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteDatasetBadGateway) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteDatasetServiceUnavailable creates a DeleteDatasetServiceUnavailable with default headers values
func NewDeleteDatasetServiceUnavailable() *DeleteDatasetServiceUnavailable {
	return &DeleteDatasetServiceUnavailable{}
}

/*DeleteDatasetServiceUnavailable handles this case with default header values.

unexpected error
*/
type DeleteDatasetServiceUnavailable struct {
	Payload *models.ErrorResponse
}

func (o *DeleteDatasetServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /dataset][%d] deleteDatasetServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteDatasetServiceUnavailable) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteDatasetServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*DeleteDatasetBody delete dataset body
swagger:model DeleteDatasetBody
*/
type DeleteDatasetBody struct {

	// access
	// Required: true
	Access models.AccessMode `json:"access"`

	// internal ID
	// Required: true
	InternalID *string `json:"internalID"`

	// path within the dataset, without a starting slash. An empty
	// string pushes to the root of the dataset (i.e. inside the
	// directory named <internalID> in the iRODS backend).
	//
	Path string `json:"path,omitempty"`

	// project
	// Required: true
	Project *string `json:"project"`

	// zone
	Zone string `json:"zone,omitempty"`
}

// Validate validates this delete dataset body
func (o *DeleteDatasetBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAccess(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateInternalID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateProject(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *DeleteDatasetBody) validateAccess(formats strfmt.Registry) error {

	if err := o.Access.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("json" + "." + "access")
		}
		return err
	}

	return nil
}

func (o *DeleteDatasetBody) validateInternalID(formats strfmt.Registry) error {

	if err := validate.Required("json"+"."+"internalID", "body", o.InternalID); err != nil {
		return err
	}

	return nil
}

func (o *DeleteDatasetBody) validateProject(formats strfmt.Registry) error {

	if err := validate.Required("json"+"."+"project", "body", o.Project); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *DeleteDatasetBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteDatasetBody) UnmarshalBinary(b []byte) error {
	var res DeleteDatasetBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*DeleteDatasetCreatedBody delete dataset created body
swagger:model DeleteDatasetCreatedBody
*/
type DeleteDatasetCreatedBody struct {

	// internal ID
	InternalID string `json:"internalID,omitempty"`

	// request id
	RequestID string `json:"request_id,omitempty"`

	// staging API
	StagingAPI string `json:"stagingAPI,omitempty"`
}

// Validate validates this delete dataset created body
func (o *DeleteDatasetCreatedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *DeleteDatasetCreatedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteDatasetCreatedBody) UnmarshalBinary(b []byte) error {
	var res DeleteDatasetCreatedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
