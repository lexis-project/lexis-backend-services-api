// Code generated by go-swagger; DO NOT EDIT.

package data_set_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewDeleteDatasetParams creates a new DeleteDatasetParams object
// with the default values initialized.
func NewDeleteDatasetParams() *DeleteDatasetParams {
	var ()
	return &DeleteDatasetParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteDatasetParamsWithTimeout creates a new DeleteDatasetParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDeleteDatasetParamsWithTimeout(timeout time.Duration) *DeleteDatasetParams {
	var ()
	return &DeleteDatasetParams{

		timeout: timeout,
	}
}

// NewDeleteDatasetParamsWithContext creates a new DeleteDatasetParams object
// with the default values initialized, and the ability to set a context for a request
func NewDeleteDatasetParamsWithContext(ctx context.Context) *DeleteDatasetParams {
	var ()
	return &DeleteDatasetParams{

		Context: ctx,
	}
}

// NewDeleteDatasetParamsWithHTTPClient creates a new DeleteDatasetParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDeleteDatasetParamsWithHTTPClient(client *http.Client) *DeleteDatasetParams {
	var ()
	return &DeleteDatasetParams{
		HTTPClient: client,
	}
}

/*DeleteDatasetParams contains all the parameters to send to the API endpoint
for the delete dataset operation typically these are written to a http.Request
*/
type DeleteDatasetParams struct {

	/*JSON
	  parameter

	*/
	JSON DeleteDatasetBody

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the delete dataset params
func (o *DeleteDatasetParams) WithTimeout(timeout time.Duration) *DeleteDatasetParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete dataset params
func (o *DeleteDatasetParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete dataset params
func (o *DeleteDatasetParams) WithContext(ctx context.Context) *DeleteDatasetParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete dataset params
func (o *DeleteDatasetParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete dataset params
func (o *DeleteDatasetParams) WithHTTPClient(client *http.Client) *DeleteDatasetParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete dataset params
func (o *DeleteDatasetParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithJSON adds the json to the delete dataset params
func (o *DeleteDatasetParams) WithJSON(json DeleteDatasetBody) *DeleteDatasetParams {
	o.SetJSON(json)
	return o
}

// SetJSON adds the json to the delete dataset params
func (o *DeleteDatasetParams) SetJSON(json DeleteDatasetBody) {
	o.JSON = json
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteDatasetParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if err := r.SetBodyParam(o.JSON); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
