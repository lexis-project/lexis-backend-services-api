// Code generated by go-swagger; DO NOT EDIT.

package data_set_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/lexis-project/lexis-backend-services-api.git/models"
)

// CheckDecryptionDecompressionStatusReader is a Reader for the CheckDecryptionDecompressionStatus structure.
type CheckDecryptionDecompressionStatusReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CheckDecryptionDecompressionStatusReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCheckDecryptionDecompressionStatusOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCheckDecryptionDecompressionStatusBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCheckDecryptionDecompressionStatusUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCheckDecryptionDecompressionStatusNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 414:
		result := NewCheckDecryptionDecompressionStatusRequestURITooLong()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCheckDecryptionDecompressionStatusInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCheckDecryptionDecompressionStatusOK creates a CheckDecryptionDecompressionStatusOK with default headers values
func NewCheckDecryptionDecompressionStatusOK() *CheckDecryptionDecompressionStatusOK {
	return &CheckDecryptionDecompressionStatusOK{}
}

/*CheckDecryptionDecompressionStatusOK handles this case with default header values.

This means that the status has been returned to the user in the response body.
*/
type CheckDecryptionDecompressionStatusOK struct {
	Payload *CheckDecryptionDecompressionStatusOKBody
}

func (o *CheckDecryptionDecompressionStatusOK) Error() string {
	return fmt.Sprintf("[GET /dataset/encryption/decrypt_decompress/{request_id}][%d] checkDecryptionDecompressionStatusOK  %+v", 200, o.Payload)
}

func (o *CheckDecryptionDecompressionStatusOK) GetPayload() *CheckDecryptionDecompressionStatusOKBody {
	return o.Payload
}

func (o *CheckDecryptionDecompressionStatusOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CheckDecryptionDecompressionStatusOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCheckDecryptionDecompressionStatusBadRequest creates a CheckDecryptionDecompressionStatusBadRequest with default headers values
func NewCheckDecryptionDecompressionStatusBadRequest() *CheckDecryptionDecompressionStatusBadRequest {
	return &CheckDecryptionDecompressionStatusBadRequest{}
}

/*CheckDecryptionDecompressionStatusBadRequest handles this case with default header values.

This means that the request ID given by the user is incorrect.
*/
type CheckDecryptionDecompressionStatusBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *CheckDecryptionDecompressionStatusBadRequest) Error() string {
	return fmt.Sprintf("[GET /dataset/encryption/decrypt_decompress/{request_id}][%d] checkDecryptionDecompressionStatusBadRequest  %+v", 400, o.Payload)
}

func (o *CheckDecryptionDecompressionStatusBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CheckDecryptionDecompressionStatusBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCheckDecryptionDecompressionStatusUnauthorized creates a CheckDecryptionDecompressionStatusUnauthorized with default headers values
func NewCheckDecryptionDecompressionStatusUnauthorized() *CheckDecryptionDecompressionStatusUnauthorized {
	return &CheckDecryptionDecompressionStatusUnauthorized{}
}

/*CheckDecryptionDecompressionStatusUnauthorized handles this case with default header values.

This means that the user is not authenticated with keycloak and decryption with decompression can't be triggered unless the user first log in with a valid user
*/
type CheckDecryptionDecompressionStatusUnauthorized struct {
	Payload *models.ErrorResponse
}

func (o *CheckDecryptionDecompressionStatusUnauthorized) Error() string {
	return fmt.Sprintf("[GET /dataset/encryption/decrypt_decompress/{request_id}][%d] checkDecryptionDecompressionStatusUnauthorized  %+v", 401, o.Payload)
}

func (o *CheckDecryptionDecompressionStatusUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CheckDecryptionDecompressionStatusUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCheckDecryptionDecompressionStatusNotFound creates a CheckDecryptionDecompressionStatusNotFound with default headers values
func NewCheckDecryptionDecompressionStatusNotFound() *CheckDecryptionDecompressionStatusNotFound {
	return &CheckDecryptionDecompressionStatusNotFound{}
}

/*CheckDecryptionDecompressionStatusNotFound handles this case with default header values.

This means that the ID doesn't exist and thus a status can't be returned.
*/
type CheckDecryptionDecompressionStatusNotFound struct {
	Payload *models.ErrorResponse
}

func (o *CheckDecryptionDecompressionStatusNotFound) Error() string {
	return fmt.Sprintf("[GET /dataset/encryption/decrypt_decompress/{request_id}][%d] checkDecryptionDecompressionStatusNotFound  %+v", 404, o.Payload)
}

func (o *CheckDecryptionDecompressionStatusNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CheckDecryptionDecompressionStatusNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCheckDecryptionDecompressionStatusRequestURITooLong creates a CheckDecryptionDecompressionStatusRequestURITooLong with default headers values
func NewCheckDecryptionDecompressionStatusRequestURITooLong() *CheckDecryptionDecompressionStatusRequestURITooLong {
	return &CheckDecryptionDecompressionStatusRequestURITooLong{}
}

/*CheckDecryptionDecompressionStatusRequestURITooLong handles this case with default header values.

This means that the the request ID is longer than the server is willing to interpret.
*/
type CheckDecryptionDecompressionStatusRequestURITooLong struct {
	Payload *models.ErrorResponse
}

func (o *CheckDecryptionDecompressionStatusRequestURITooLong) Error() string {
	return fmt.Sprintf("[GET /dataset/encryption/decrypt_decompress/{request_id}][%d] checkDecryptionDecompressionStatusRequestUriTooLong  %+v", 414, o.Payload)
}

func (o *CheckDecryptionDecompressionStatusRequestURITooLong) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CheckDecryptionDecompressionStatusRequestURITooLong) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCheckDecryptionDecompressionStatusInternalServerError creates a CheckDecryptionDecompressionStatusInternalServerError with default headers values
func NewCheckDecryptionDecompressionStatusInternalServerError() *CheckDecryptionDecompressionStatusInternalServerError {
	return &CheckDecryptionDecompressionStatusInternalServerError{}
}

/*CheckDecryptionDecompressionStatusInternalServerError handles this case with default header values.

This means that something has gone wrong on the burst buffer. The user is advised to wait and send the request again.
*/
type CheckDecryptionDecompressionStatusInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *CheckDecryptionDecompressionStatusInternalServerError) Error() string {
	return fmt.Sprintf("[GET /dataset/encryption/decrypt_decompress/{request_id}][%d] checkDecryptionDecompressionStatusInternalServerError  %+v", 500, o.Payload)
}

func (o *CheckDecryptionDecompressionStatusInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CheckDecryptionDecompressionStatusInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*CheckDecryptionDecompressionStatusOKBody check decryption decompression status o k body
swagger:model CheckDecryptionDecompressionStatusOKBody
*/
type CheckDecryptionDecompressionStatusOKBody struct {

	// status
	// Required: true
	Status *string `json:"status"`

	// Single path for encryption endpoints
	TargetPath string `json:"target_path,omitempty"`
}

// Validate validates this check decryption decompression status o k body
func (o *CheckDecryptionDecompressionStatusOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateStatus(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CheckDecryptionDecompressionStatusOKBody) validateStatus(formats strfmt.Registry) error {

	if err := validate.Required("checkDecryptionDecompressionStatusOK"+"."+"status", "body", o.Status); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CheckDecryptionDecompressionStatusOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CheckDecryptionDecompressionStatusOKBody) UnmarshalBinary(b []byte) error {
	var res CheckDecryptionDecompressionStatusOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
