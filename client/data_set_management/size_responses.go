// Code generated by go-swagger; DO NOT EDIT.

package data_set_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/lexis-project/lexis-backend-services-api.git/models"
)

// SizeReader is a Reader for the Size structure.
type SizeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SizeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewSizeCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSizeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewSizeUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSizeForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSizeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 414:
		result := NewSizeRequestURITooLong()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewSizeTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSizeInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSizeCreated creates a SizeCreated with default headers values
func NewSizeCreated() *SizeCreated {
	return &SizeCreated{}
}

/*SizeCreated handles this case with default header values.

This is called when a user requests size of a dataset.
*/
type SizeCreated struct {
	Payload *models.SteeringRequestID
}

func (o *SizeCreated) Error() string {
	return fmt.Sprintf("[POST /dataset/data/size][%d] sizeCreated  %+v", 201, o.Payload)
}

func (o *SizeCreated) GetPayload() *models.SteeringRequestID {
	return o.Payload
}

func (o *SizeCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SteeringRequestID)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSizeBadRequest creates a SizeBadRequest with default headers values
func NewSizeBadRequest() *SizeBadRequest {
	return &SizeBadRequest{}
}

/*SizeBadRequest handles this case with default header values.

This means that there's something wrong in the input parameters and the server couldn't understand the request.
*/
type SizeBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *SizeBadRequest) Error() string {
	return fmt.Sprintf("[POST /dataset/data/size][%d] sizeBadRequest  %+v", 400, o.Payload)
}

func (o *SizeBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *SizeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSizeUnauthorized creates a SizeUnauthorized with default headers values
func NewSizeUnauthorized() *SizeUnauthorized {
	return &SizeUnauthorized{}
}

/*SizeUnauthorized handles this case with default header values.

This means that the user is not authenticated with keycloak and data transfer can't be triggered unless the user first log in with a valid user
*/
type SizeUnauthorized struct {
	Payload *models.ErrorResponse
}

func (o *SizeUnauthorized) Error() string {
	return fmt.Sprintf("[POST /dataset/data/size][%d] sizeUnauthorized  %+v", 401, o.Payload)
}

func (o *SizeUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *SizeUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSizeForbidden creates a SizeForbidden with default headers values
func NewSizeForbidden() *SizeForbidden {
	return &SizeForbidden{}
}

/*SizeForbidden handles this case with default header values.

This means that the resource the user is trying to transfer from or to is not readable or writable by the user. User doesn't have the correct rights to either read the source file or write on the target system location.
*/
type SizeForbidden struct {
	Payload *models.ErrorResponse
}

func (o *SizeForbidden) Error() string {
	return fmt.Sprintf("[POST /dataset/data/size][%d] sizeForbidden  %+v", 403, o.Payload)
}

func (o *SizeForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *SizeForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSizeNotFound creates a SizeNotFound with default headers values
func NewSizeNotFound() *SizeNotFound {
	return &SizeNotFound{}
}

/*SizeNotFound handles this case with default header values.

This means that either the source path or the the target path on the system doesn't exist.
*/
type SizeNotFound struct {
	Payload *models.ErrorResponse
}

func (o *SizeNotFound) Error() string {
	return fmt.Sprintf("[POST /dataset/data/size][%d] sizeNotFound  %+v", 404, o.Payload)
}

func (o *SizeNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *SizeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSizeRequestURITooLong creates a SizeRequestURITooLong with default headers values
func NewSizeRequestURITooLong() *SizeRequestURITooLong {
	return &SizeRequestURITooLong{}
}

/*SizeRequestURITooLong handles this case with default header values.

This means that the either the source path or the target path is longer than the server is willing to interpret.
*/
type SizeRequestURITooLong struct {
	Payload *models.ErrorResponse
}

func (o *SizeRequestURITooLong) Error() string {
	return fmt.Sprintf("[POST /dataset/data/size][%d] sizeRequestUriTooLong  %+v", 414, o.Payload)
}

func (o *SizeRequestURITooLong) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *SizeRequestURITooLong) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSizeTooManyRequests creates a SizeTooManyRequests with default headers values
func NewSizeTooManyRequests() *SizeTooManyRequests {
	return &SizeTooManyRequests{}
}

/*SizeTooManyRequests handles this case with default header values.

This means that the user has sent too many requests in a given amount of time. The user is advised to wait and send the request again.
*/
type SizeTooManyRequests struct {
	Payload *models.ErrorResponse
}

func (o *SizeTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /dataset/data/size][%d] sizeTooManyRequests  %+v", 429, o.Payload)
}

func (o *SizeTooManyRequests) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *SizeTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSizeInternalServerError creates a SizeInternalServerError with default headers values
func NewSizeInternalServerError() *SizeInternalServerError {
	return &SizeInternalServerError{}
}

/*SizeInternalServerError handles this case with default header values.

This means that something has gone wrong on the data transfer steering server. The user is advised to wait and send the request again.
*/
type SizeInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *SizeInternalServerError) Error() string {
	return fmt.Sprintf("[POST /dataset/data/size][%d] sizeInternalServerError  %+v", 500, o.Payload)
}

func (o *SizeInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *SizeInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*SizeBody size body
swagger:model SizeBody
*/
type SizeBody struct {

	// Possible values are: "lrz_iRODS", "it4i_iRODS"
	//
	// Required: true
	TargetPath *string `json:"target_path"`

	// Possible values are: "lrz_iRODS", "it4i_iRODS"
	//
	// Required: true
	TargetSystem *string `json:"target_system"`
}

// Validate validates this size body
func (o *SizeBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateTargetPath(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateTargetSystem(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *SizeBody) validateTargetPath(formats strfmt.Registry) error {

	if err := validate.Required("parameters"+"."+"target_path", "body", o.TargetPath); err != nil {
		return err
	}

	return nil
}

func (o *SizeBody) validateTargetSystem(formats strfmt.Registry) error {

	if err := validate.Required("parameters"+"."+"target_system", "body", o.TargetSystem); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *SizeBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SizeBody) UnmarshalBinary(b []byte) error {
	var res SizeBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
