// Code generated by go-swagger; DO NOT EDIT.

package data_set_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/lexis-project/lexis-backend-services-api.git/models"
)

// DeleteDatasetByMetadataReader is a Reader for the DeleteDatasetByMetadata structure.
type DeleteDatasetByMetadataReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteDatasetByMetadataReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteDatasetByMetadataNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteDatasetByMetadataBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteDatasetByMetadataUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteDatasetByMetadataForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteDatasetByMetadataInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 502:
		result := NewDeleteDatasetByMetadataBadGateway()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewDeleteDatasetByMetadataServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteDatasetByMetadataNoContent creates a DeleteDatasetByMetadataNoContent with default headers values
func NewDeleteDatasetByMetadataNoContent() *DeleteDatasetByMetadataNoContent {
	return &DeleteDatasetByMetadataNoContent{}
}

/*DeleteDatasetByMetadataNoContent handles this case with default header values.

datasets were deleted
*/
type DeleteDatasetByMetadataNoContent struct {
}

func (o *DeleteDatasetByMetadataNoContent) Error() string {
	return fmt.Sprintf("[DELETE /dataset/search/metadata][%d] deleteDatasetByMetadataNoContent ", 204)
}

func (o *DeleteDatasetByMetadataNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDatasetByMetadataBadRequest creates a DeleteDatasetByMetadataBadRequest with default headers values
func NewDeleteDatasetByMetadataBadRequest() *DeleteDatasetByMetadataBadRequest {
	return &DeleteDatasetByMetadataBadRequest{}
}

/*DeleteDatasetByMetadataBadRequest handles this case with default header values.

Malformed Request
*/
type DeleteDatasetByMetadataBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *DeleteDatasetByMetadataBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /dataset/search/metadata][%d] deleteDatasetByMetadataBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteDatasetByMetadataBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteDatasetByMetadataBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteDatasetByMetadataUnauthorized creates a DeleteDatasetByMetadataUnauthorized with default headers values
func NewDeleteDatasetByMetadataUnauthorized() *DeleteDatasetByMetadataUnauthorized {
	return &DeleteDatasetByMetadataUnauthorized{}
}

/*DeleteDatasetByMetadataUnauthorized handles this case with default header values.

Authorization failed
*/
type DeleteDatasetByMetadataUnauthorized struct {
	Payload *models.ErrorResponse
}

func (o *DeleteDatasetByMetadataUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /dataset/search/metadata][%d] deleteDatasetByMetadataUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteDatasetByMetadataUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteDatasetByMetadataUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteDatasetByMetadataForbidden creates a DeleteDatasetByMetadataForbidden with default headers values
func NewDeleteDatasetByMetadataForbidden() *DeleteDatasetByMetadataForbidden {
	return &DeleteDatasetByMetadataForbidden{}
}

/*DeleteDatasetByMetadataForbidden handles this case with default header values.

The user does not have permission to remove dataset
*/
type DeleteDatasetByMetadataForbidden struct {
	Payload *DeleteDatasetByMetadataForbiddenBody
}

func (o *DeleteDatasetByMetadataForbidden) Error() string {
	return fmt.Sprintf("[DELETE /dataset/search/metadata][%d] deleteDatasetByMetadataForbidden  %+v", 403, o.Payload)
}

func (o *DeleteDatasetByMetadataForbidden) GetPayload() *DeleteDatasetByMetadataForbiddenBody {
	return o.Payload
}

func (o *DeleteDatasetByMetadataForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(DeleteDatasetByMetadataForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteDatasetByMetadataInternalServerError creates a DeleteDatasetByMetadataInternalServerError with default headers values
func NewDeleteDatasetByMetadataInternalServerError() *DeleteDatasetByMetadataInternalServerError {
	return &DeleteDatasetByMetadataInternalServerError{}
}

/*DeleteDatasetByMetadataInternalServerError handles this case with default header values.

Internal error processing request
*/
type DeleteDatasetByMetadataInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *DeleteDatasetByMetadataInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /dataset/search/metadata][%d] deleteDatasetByMetadataInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteDatasetByMetadataInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteDatasetByMetadataInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteDatasetByMetadataBadGateway creates a DeleteDatasetByMetadataBadGateway with default headers values
func NewDeleteDatasetByMetadataBadGateway() *DeleteDatasetByMetadataBadGateway {
	return &DeleteDatasetByMetadataBadGateway{}
}

/*DeleteDatasetByMetadataBadGateway handles this case with default header values.

Bad Gateway
*/
type DeleteDatasetByMetadataBadGateway struct {
	Payload *models.ErrorResponse
}

func (o *DeleteDatasetByMetadataBadGateway) Error() string {
	return fmt.Sprintf("[DELETE /dataset/search/metadata][%d] deleteDatasetByMetadataBadGateway  %+v", 502, o.Payload)
}

func (o *DeleteDatasetByMetadataBadGateway) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteDatasetByMetadataBadGateway) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteDatasetByMetadataServiceUnavailable creates a DeleteDatasetByMetadataServiceUnavailable with default headers values
func NewDeleteDatasetByMetadataServiceUnavailable() *DeleteDatasetByMetadataServiceUnavailable {
	return &DeleteDatasetByMetadataServiceUnavailable{}
}

/*DeleteDatasetByMetadataServiceUnavailable handles this case with default header values.

unexpected error connecting to further backends
*/
type DeleteDatasetByMetadataServiceUnavailable struct {
	Payload *models.ErrorResponse
}

func (o *DeleteDatasetByMetadataServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /dataset/search/metadata][%d] deleteDatasetByMetadataServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteDatasetByMetadataServiceUnavailable) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteDatasetByMetadataServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*DeleteDatasetByMetadataForbiddenBody delete dataset by metadata forbidden body
swagger:model DeleteDatasetByMetadataForbiddenBody
*/
type DeleteDatasetByMetadataForbiddenBody struct {

	// error string
	// Required: true
	ErrorString *string `json:"errorString"`

	// permission error
	PermissionError []*DeleteDatasetByMetadataForbiddenBodyPermissionErrorItems0 `json:"permission_error"`
}

// Validate validates this delete dataset by metadata forbidden body
func (o *DeleteDatasetByMetadataForbiddenBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateErrorString(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validatePermissionError(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *DeleteDatasetByMetadataForbiddenBody) validateErrorString(formats strfmt.Registry) error {

	if err := validate.Required("deleteDatasetByMetadataForbidden"+"."+"errorString", "body", o.ErrorString); err != nil {
		return err
	}

	return nil
}

func (o *DeleteDatasetByMetadataForbiddenBody) validatePermissionError(formats strfmt.Registry) error {

	if swag.IsZero(o.PermissionError) { // not required
		return nil
	}

	for i := 0; i < len(o.PermissionError); i++ {
		if swag.IsZero(o.PermissionError[i]) { // not required
			continue
		}

		if o.PermissionError[i] != nil {
			if err := o.PermissionError[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("deleteDatasetByMetadataForbidden" + "." + "permission_error" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *DeleteDatasetByMetadataForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteDatasetByMetadataForbiddenBody) UnmarshalBinary(b []byte) error {
	var res DeleteDatasetByMetadataForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*DeleteDatasetByMetadataForbiddenBodyPermissionErrorItems0 delete dataset by metadata forbidden body permission error items0
swagger:model DeleteDatasetByMetadataForbiddenBodyPermissionErrorItems0
*/
type DeleteDatasetByMetadataForbiddenBodyPermissionErrorItems0 struct {

	// internal ID
	// Required: true
	InternalID *string `json:"internalID"`
}

// Validate validates this delete dataset by metadata forbidden body permission error items0
func (o *DeleteDatasetByMetadataForbiddenBodyPermissionErrorItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateInternalID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *DeleteDatasetByMetadataForbiddenBodyPermissionErrorItems0) validateInternalID(formats strfmt.Registry) error {

	if err := validate.Required("internalID", "body", o.InternalID); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *DeleteDatasetByMetadataForbiddenBodyPermissionErrorItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteDatasetByMetadataForbiddenBodyPermissionErrorItems0) UnmarshalBinary(b []byte) error {
	var res DeleteDatasetByMetadataForbiddenBodyPermissionErrorItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
