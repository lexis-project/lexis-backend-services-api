// Code generated by go-swagger; DO NOT EDIT.

package data_set_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/lexis-project/lexis-backend-services-api.git/models"
)

// CreateSSHFSExportReader is a Reader for the CreateSSHFSExport structure.
type CreateSSHFSExportReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateSSHFSExportReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateSSHFSExportCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateSSHFSExportBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateSSHFSExportUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateSSHFSExportForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewCreateSSHFSExportServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateSSHFSExportCreated creates a CreateSSHFSExportCreated with default headers values
func NewCreateSSHFSExportCreated() *CreateSSHFSExportCreated {
	return &CreateSSHFSExportCreated{}
}

/*CreateSSHFSExportCreated handles this case with default header values.

Export created
*/
type CreateSSHFSExportCreated struct {
	Payload *CreateSSHFSExportCreatedBody
}

func (o *CreateSSHFSExportCreated) Error() string {
	return fmt.Sprintf("[POST /dataset/ssh/sshfsexport][%d] createSshFSExportCreated  %+v", 201, o.Payload)
}

func (o *CreateSSHFSExportCreated) GetPayload() *CreateSSHFSExportCreatedBody {
	return o.Payload
}

func (o *CreateSSHFSExportCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CreateSSHFSExportCreatedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateSSHFSExportBadRequest creates a CreateSSHFSExportBadRequest with default headers values
func NewCreateSSHFSExportBadRequest() *CreateSSHFSExportBadRequest {
	return &CreateSSHFSExportBadRequest{}
}

/*CreateSSHFSExportBadRequest handles this case with default header values.

This means that there's something wrong in the input parameters and the server couldn't understand the request.
*/
type CreateSSHFSExportBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *CreateSSHFSExportBadRequest) Error() string {
	return fmt.Sprintf("[POST /dataset/ssh/sshfsexport][%d] createSshFSExportBadRequest  %+v", 400, o.Payload)
}

func (o *CreateSSHFSExportBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateSSHFSExportBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateSSHFSExportUnauthorized creates a CreateSSHFSExportUnauthorized with default headers values
func NewCreateSSHFSExportUnauthorized() *CreateSSHFSExportUnauthorized {
	return &CreateSSHFSExportUnauthorized{}
}

/*CreateSSHFSExportUnauthorized handles this case with default header values.

This means that the user is not authenticated with keycloak and data transfer can't be triggered unless the user first log in with a valid user
*/
type CreateSSHFSExportUnauthorized struct {
	Payload *models.ErrorResponse
}

func (o *CreateSSHFSExportUnauthorized) Error() string {
	return fmt.Sprintf("[POST /dataset/ssh/sshfsexport][%d] createSshFSExportUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateSSHFSExportUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateSSHFSExportUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateSSHFSExportForbidden creates a CreateSSHFSExportForbidden with default headers values
func NewCreateSSHFSExportForbidden() *CreateSSHFSExportForbidden {
	return &CreateSSHFSExportForbidden{}
}

/*CreateSSHFSExportForbidden handles this case with default header values.

This means that the resource the user is trying to transfer from or to is not readable or writable by the user. User doesn't have the correct rights to either read the source file or write on the target system location.
*/
type CreateSSHFSExportForbidden struct {
	Payload *models.ErrorResponse
}

func (o *CreateSSHFSExportForbidden) Error() string {
	return fmt.Sprintf("[POST /dataset/ssh/sshfsexport][%d] createSshFSExportForbidden  %+v", 403, o.Payload)
}

func (o *CreateSSHFSExportForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateSSHFSExportForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateSSHFSExportServiceUnavailable creates a CreateSSHFSExportServiceUnavailable with default headers values
func NewCreateSSHFSExportServiceUnavailable() *CreateSSHFSExportServiceUnavailable {
	return &CreateSSHFSExportServiceUnavailable{}
}

/*CreateSSHFSExportServiceUnavailable handles this case with default header values.

unexpected error
*/
type CreateSSHFSExportServiceUnavailable struct {
	Payload *models.ErrorResponse
}

func (o *CreateSSHFSExportServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /dataset/ssh/sshfsexport][%d] createSshFSExportServiceUnavailable  %+v", 503, o.Payload)
}

func (o *CreateSSHFSExportServiceUnavailable) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateSSHFSExportServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*CreateSSHFSExportBody create SSH f s export body
swagger:model CreateSSHFSExportBody
*/
type CreateSSHFSExportBody struct {

	// host
	// Required: true
	Host *string `json:"host"`

	// path
	// Required: true
	Path *string `json:"path"`

	// pubkey
	// Required: true
	Pubkey *string `json:"pubkey"`
}

// Validate validates this create SSH f s export body
func (o *CreateSSHFSExportBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateHost(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validatePath(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validatePubkey(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateSSHFSExportBody) validateHost(formats strfmt.Registry) error {

	if err := validate.Required("parameters"+"."+"host", "body", o.Host); err != nil {
		return err
	}

	return nil
}

func (o *CreateSSHFSExportBody) validatePath(formats strfmt.Registry) error {

	if err := validate.Required("parameters"+"."+"path", "body", o.Path); err != nil {
		return err
	}

	return nil
}

func (o *CreateSSHFSExportBody) validatePubkey(formats strfmt.Registry) error {

	if err := validate.Required("parameters"+"."+"pubkey", "body", o.Pubkey); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateSSHFSExportBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateSSHFSExportBody) UnmarshalBinary(b []byte) error {
	var res CreateSSHFSExportBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*CreateSSHFSExportCreatedBody create SSH f s export created body
swagger:model CreateSSHFSExportCreatedBody
*/
type CreateSSHFSExportCreatedBody struct {

	// sshfs
	// Required: true
	Sshfs *string `json:"sshfs"`

	// user
	// Required: true
	User *string `json:"user"`
}

// Validate validates this create SSH f s export created body
func (o *CreateSSHFSExportCreatedBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateSshfs(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateUser(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateSSHFSExportCreatedBody) validateSshfs(formats strfmt.Registry) error {

	if err := validate.Required("createSshFSExportCreated"+"."+"sshfs", "body", o.Sshfs); err != nil {
		return err
	}

	return nil
}

func (o *CreateSSHFSExportCreatedBody) validateUser(formats strfmt.Registry) error {

	if err := validate.Required("createSshFSExportCreated"+"."+"user", "body", o.User); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateSSHFSExportCreatedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateSSHFSExportCreatedBody) UnmarshalBinary(b []byte) error {
	var res CreateSSHFSExportCreatedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
