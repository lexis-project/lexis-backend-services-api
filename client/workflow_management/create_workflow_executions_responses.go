// Code generated by go-swagger; DO NOT EDIT.

package workflow_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/lexis-project/lexis-backend-services-api.git/models"
)

// CreateWorkflowExecutionsReader is a Reader for the CreateWorkflowExecutions structure.
type CreateWorkflowExecutionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateWorkflowExecutionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateWorkflowExecutionsCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateWorkflowExecutionsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateWorkflowExecutionsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateWorkflowExecutionsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewCreateWorkflowExecutionsConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateWorkflowExecutionsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateWorkflowExecutionsCreated creates a CreateWorkflowExecutionsCreated with default headers values
func NewCreateWorkflowExecutionsCreated() *CreateWorkflowExecutionsCreated {
	return &CreateWorkflowExecutionsCreated{}
}

/*CreateWorkflowExecutionsCreated handles this case with default header values.

LEXIS WorkflowExecution created and Input upload successfull
*/
type CreateWorkflowExecutionsCreated struct {
	Payload []*models.ItemCreatedResponse
}

func (o *CreateWorkflowExecutionsCreated) Error() string {
	return fmt.Sprintf("[POST /workflow/{workflowId}/executions][%d] createWorkflowExecutionsCreated  %+v", 201, o.Payload)
}

func (o *CreateWorkflowExecutionsCreated) GetPayload() []*models.ItemCreatedResponse {
	return o.Payload
}

func (o *CreateWorkflowExecutionsCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateWorkflowExecutionsBadRequest creates a CreateWorkflowExecutionsBadRequest with default headers values
func NewCreateWorkflowExecutionsBadRequest() *CreateWorkflowExecutionsBadRequest {
	return &CreateWorkflowExecutionsBadRequest{}
}

/*CreateWorkflowExecutionsBadRequest handles this case with default header values.

invalid input, object invalid
*/
type CreateWorkflowExecutionsBadRequest struct {
	Payload *models.InvalidResponse
}

func (o *CreateWorkflowExecutionsBadRequest) Error() string {
	return fmt.Sprintf("[POST /workflow/{workflowId}/executions][%d] createWorkflowExecutionsBadRequest  %+v", 400, o.Payload)
}

func (o *CreateWorkflowExecutionsBadRequest) GetPayload() *models.InvalidResponse {
	return o.Payload
}

func (o *CreateWorkflowExecutionsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InvalidResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateWorkflowExecutionsUnauthorized creates a CreateWorkflowExecutionsUnauthorized with default headers values
func NewCreateWorkflowExecutionsUnauthorized() *CreateWorkflowExecutionsUnauthorized {
	return &CreateWorkflowExecutionsUnauthorized{}
}

/*CreateWorkflowExecutionsUnauthorized handles this case with default header values.

Unauthorized
*/
type CreateWorkflowExecutionsUnauthorized struct {
	Payload *models.AuthorizationResponse
}

func (o *CreateWorkflowExecutionsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /workflow/{workflowId}/executions][%d] createWorkflowExecutionsUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateWorkflowExecutionsUnauthorized) GetPayload() *models.AuthorizationResponse {
	return o.Payload
}

func (o *CreateWorkflowExecutionsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AuthorizationResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateWorkflowExecutionsNotFound creates a CreateWorkflowExecutionsNotFound with default headers values
func NewCreateWorkflowExecutionsNotFound() *CreateWorkflowExecutionsNotFound {
	return &CreateWorkflowExecutionsNotFound{}
}

/*CreateWorkflowExecutionsNotFound handles this case with default header values.

Required dependencies for WorkflowExecution creation not found
*/
type CreateWorkflowExecutionsNotFound struct {
	Payload *models.MissingResponse
}

func (o *CreateWorkflowExecutionsNotFound) Error() string {
	return fmt.Sprintf("[POST /workflow/{workflowId}/executions][%d] createWorkflowExecutionsNotFound  %+v", 404, o.Payload)
}

func (o *CreateWorkflowExecutionsNotFound) GetPayload() *models.MissingResponse {
	return o.Payload
}

func (o *CreateWorkflowExecutionsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MissingResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateWorkflowExecutionsConflict creates a CreateWorkflowExecutionsConflict with default headers values
func NewCreateWorkflowExecutionsConflict() *CreateWorkflowExecutionsConflict {
	return &CreateWorkflowExecutionsConflict{}
}

/*CreateWorkflowExecutionsConflict handles this case with default header values.

LEXIS WorkflowExecution already exists (a4cApplication already deployed).
*/
type CreateWorkflowExecutionsConflict struct {
	Payload *models.ConflictResponse
}

func (o *CreateWorkflowExecutionsConflict) Error() string {
	return fmt.Sprintf("[POST /workflow/{workflowId}/executions][%d] createWorkflowExecutionsConflict  %+v", 409, o.Payload)
}

func (o *CreateWorkflowExecutionsConflict) GetPayload() *models.ConflictResponse {
	return o.Payload
}

func (o *CreateWorkflowExecutionsConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ConflictResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateWorkflowExecutionsInternalServerError creates a CreateWorkflowExecutionsInternalServerError with default headers values
func NewCreateWorkflowExecutionsInternalServerError() *CreateWorkflowExecutionsInternalServerError {
	return &CreateWorkflowExecutionsInternalServerError{}
}

/*CreateWorkflowExecutionsInternalServerError handles this case with default header values.

unexpected error
*/
type CreateWorkflowExecutionsInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *CreateWorkflowExecutionsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /workflow/{workflowId}/executions][%d] createWorkflowExecutionsInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateWorkflowExecutionsInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateWorkflowExecutionsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
