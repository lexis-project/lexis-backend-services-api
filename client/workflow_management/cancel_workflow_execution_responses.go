// Code generated by go-swagger; DO NOT EDIT.

package workflow_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/lexis-project/lexis-backend-services-api.git/models"
)

// CancelWorkflowExecutionReader is a Reader for the CancelWorkflowExecution structure.
type CancelWorkflowExecutionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CancelWorkflowExecutionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCancelWorkflowExecutionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCancelWorkflowExecutionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCancelWorkflowExecutionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCancelWorkflowExecutionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCancelWorkflowExecutionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCancelWorkflowExecutionOK creates a CancelWorkflowExecutionOK with default headers values
func NewCancelWorkflowExecutionOK() *CancelWorkflowExecutionOK {
	return &CancelWorkflowExecutionOK{}
}

/*CancelWorkflowExecutionOK handles this case with default header values.

LEXIS WorkflowExecution deletion
*/
type CancelWorkflowExecutionOK struct {
	Payload *models.DeletedResponse
}

func (o *CancelWorkflowExecutionOK) Error() string {
	return fmt.Sprintf("[DELETE /workflow/{workflowId}/execution/{workflowExecutionId}][%d] cancelWorkflowExecutionOK  %+v", 200, o.Payload)
}

func (o *CancelWorkflowExecutionOK) GetPayload() *models.DeletedResponse {
	return o.Payload
}

func (o *CancelWorkflowExecutionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DeletedResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCancelWorkflowExecutionBadRequest creates a CancelWorkflowExecutionBadRequest with default headers values
func NewCancelWorkflowExecutionBadRequest() *CancelWorkflowExecutionBadRequest {
	return &CancelWorkflowExecutionBadRequest{}
}

/*CancelWorkflowExecutionBadRequest handles this case with default header values.

invalid input, object invalid
*/
type CancelWorkflowExecutionBadRequest struct {
	Payload *models.InvalidResponse
}

func (o *CancelWorkflowExecutionBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /workflow/{workflowId}/execution/{workflowExecutionId}][%d] cancelWorkflowExecutionBadRequest  %+v", 400, o.Payload)
}

func (o *CancelWorkflowExecutionBadRequest) GetPayload() *models.InvalidResponse {
	return o.Payload
}

func (o *CancelWorkflowExecutionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InvalidResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCancelWorkflowExecutionUnauthorized creates a CancelWorkflowExecutionUnauthorized with default headers values
func NewCancelWorkflowExecutionUnauthorized() *CancelWorkflowExecutionUnauthorized {
	return &CancelWorkflowExecutionUnauthorized{}
}

/*CancelWorkflowExecutionUnauthorized handles this case with default header values.

Unauthorized
*/
type CancelWorkflowExecutionUnauthorized struct {
	Payload *models.AuthorizationResponse
}

func (o *CancelWorkflowExecutionUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /workflow/{workflowId}/execution/{workflowExecutionId}][%d] cancelWorkflowExecutionUnauthorized  %+v", 401, o.Payload)
}

func (o *CancelWorkflowExecutionUnauthorized) GetPayload() *models.AuthorizationResponse {
	return o.Payload
}

func (o *CancelWorkflowExecutionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AuthorizationResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCancelWorkflowExecutionNotFound creates a CancelWorkflowExecutionNotFound with default headers values
func NewCancelWorkflowExecutionNotFound() *CancelWorkflowExecutionNotFound {
	return &CancelWorkflowExecutionNotFound{}
}

/*CancelWorkflowExecutionNotFound handles this case with default header values.

LEXIS WorkflowExecution does not exist
*/
type CancelWorkflowExecutionNotFound struct {
	Payload *models.MissingResponse
}

func (o *CancelWorkflowExecutionNotFound) Error() string {
	return fmt.Sprintf("[DELETE /workflow/{workflowId}/execution/{workflowExecutionId}][%d] cancelWorkflowExecutionNotFound  %+v", 404, o.Payload)
}

func (o *CancelWorkflowExecutionNotFound) GetPayload() *models.MissingResponse {
	return o.Payload
}

func (o *CancelWorkflowExecutionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MissingResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCancelWorkflowExecutionInternalServerError creates a CancelWorkflowExecutionInternalServerError with default headers values
func NewCancelWorkflowExecutionInternalServerError() *CancelWorkflowExecutionInternalServerError {
	return &CancelWorkflowExecutionInternalServerError{}
}

/*CancelWorkflowExecutionInternalServerError handles this case with default header values.

unexpected error
*/
type CancelWorkflowExecutionInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *CancelWorkflowExecutionInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /workflow/{workflowId}/execution/{workflowExecutionId}][%d] cancelWorkflowExecutionInternalServerError  %+v", 500, o.Payload)
}

func (o *CancelWorkflowExecutionInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CancelWorkflowExecutionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
