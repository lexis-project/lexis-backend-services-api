// Code generated by go-swagger; DO NOT EDIT.

package workflow_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/lexis-project/lexis-backend-services-api.git/models"
)

// DeleteWorkflowReader is a Reader for the DeleteWorkflow structure.
type DeleteWorkflowReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteWorkflowReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteWorkflowOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteWorkflowBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteWorkflowUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteWorkflowNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewDeleteWorkflowConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewDeleteWorkflowUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteWorkflowInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteWorkflowOK creates a DeleteWorkflowOK with default headers values
func NewDeleteWorkflowOK() *DeleteWorkflowOK {
	return &DeleteWorkflowOK{}
}

/*DeleteWorkflowOK handles this case with default header values.

Workflow Deleted
*/
type DeleteWorkflowOK struct {
	Payload *models.DeletedResponse
}

func (o *DeleteWorkflowOK) Error() string {
	return fmt.Sprintf("[DELETE /workflow/{workflowId}][%d] deleteWorkflowOK  %+v", 200, o.Payload)
}

func (o *DeleteWorkflowOK) GetPayload() *models.DeletedResponse {
	return o.Payload
}

func (o *DeleteWorkflowOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DeletedResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteWorkflowBadRequest creates a DeleteWorkflowBadRequest with default headers values
func NewDeleteWorkflowBadRequest() *DeleteWorkflowBadRequest {
	return &DeleteWorkflowBadRequest{}
}

/*DeleteWorkflowBadRequest handles this case with default header values.

invalid input, object invalid
*/
type DeleteWorkflowBadRequest struct {
	Payload *models.InvalidResponse
}

func (o *DeleteWorkflowBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /workflow/{workflowId}][%d] deleteWorkflowBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteWorkflowBadRequest) GetPayload() *models.InvalidResponse {
	return o.Payload
}

func (o *DeleteWorkflowBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InvalidResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteWorkflowUnauthorized creates a DeleteWorkflowUnauthorized with default headers values
func NewDeleteWorkflowUnauthorized() *DeleteWorkflowUnauthorized {
	return &DeleteWorkflowUnauthorized{}
}

/*DeleteWorkflowUnauthorized handles this case with default header values.

Unauthorized
*/
type DeleteWorkflowUnauthorized struct {
	Payload *models.AuthorizationResponse
}

func (o *DeleteWorkflowUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /workflow/{workflowId}][%d] deleteWorkflowUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteWorkflowUnauthorized) GetPayload() *models.AuthorizationResponse {
	return o.Payload
}

func (o *DeleteWorkflowUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AuthorizationResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteWorkflowNotFound creates a DeleteWorkflowNotFound with default headers values
func NewDeleteWorkflowNotFound() *DeleteWorkflowNotFound {
	return &DeleteWorkflowNotFound{}
}

/*DeleteWorkflowNotFound handles this case with default header values.

Workflow with WorkflowId not found
*/
type DeleteWorkflowNotFound struct {
	Payload *models.MissingResponse
}

func (o *DeleteWorkflowNotFound) Error() string {
	return fmt.Sprintf("[DELETE /workflow/{workflowId}][%d] deleteWorkflowNotFound  %+v", 404, o.Payload)
}

func (o *DeleteWorkflowNotFound) GetPayload() *models.MissingResponse {
	return o.Payload
}

func (o *DeleteWorkflowNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MissingResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteWorkflowConflict creates a DeleteWorkflowConflict with default headers values
func NewDeleteWorkflowConflict() *DeleteWorkflowConflict {
	return &DeleteWorkflowConflict{}
}

/*DeleteWorkflowConflict handles this case with default header values.

Workflow does not exist
*/
type DeleteWorkflowConflict struct {
	Payload *models.ConflictResponse
}

func (o *DeleteWorkflowConflict) Error() string {
	return fmt.Sprintf("[DELETE /workflow/{workflowId}][%d] deleteWorkflowConflict  %+v", 409, o.Payload)
}

func (o *DeleteWorkflowConflict) GetPayload() *models.ConflictResponse {
	return o.Payload
}

func (o *DeleteWorkflowConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ConflictResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteWorkflowUnprocessableEntity creates a DeleteWorkflowUnprocessableEntity with default headers values
func NewDeleteWorkflowUnprocessableEntity() *DeleteWorkflowUnprocessableEntity {
	return &DeleteWorkflowUnprocessableEntity{}
}

/*DeleteWorkflowUnprocessableEntity handles this case with default header values.

Workflow currently running in LEXIS WorkflowExecution.
*/
type DeleteWorkflowUnprocessableEntity struct {
}

func (o *DeleteWorkflowUnprocessableEntity) Error() string {
	return fmt.Sprintf("[DELETE /workflow/{workflowId}][%d] deleteWorkflowUnprocessableEntity ", 422)
}

func (o *DeleteWorkflowUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteWorkflowInternalServerError creates a DeleteWorkflowInternalServerError with default headers values
func NewDeleteWorkflowInternalServerError() *DeleteWorkflowInternalServerError {
	return &DeleteWorkflowInternalServerError{}
}

/*DeleteWorkflowInternalServerError handles this case with default header values.

unexpected error
*/
type DeleteWorkflowInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *DeleteWorkflowInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /workflow/{workflowId}][%d] deleteWorkflowInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteWorkflowInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteWorkflowInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
