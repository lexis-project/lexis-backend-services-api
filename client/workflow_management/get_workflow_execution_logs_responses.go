// Code generated by go-swagger; DO NOT EDIT.

package workflow_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/lexis-project/lexis-backend-services-api.git/models"
)

// GetWorkflowExecutionLogsReader is a Reader for the GetWorkflowExecutionLogs structure.
type GetWorkflowExecutionLogsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetWorkflowExecutionLogsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetWorkflowExecutionLogsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetWorkflowExecutionLogsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetWorkflowExecutionLogsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetWorkflowExecutionLogsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetWorkflowExecutionLogsOK creates a GetWorkflowExecutionLogsOK with default headers values
func NewGetWorkflowExecutionLogsOK() *GetWorkflowExecutionLogsOK {
	return &GetWorkflowExecutionLogsOK{}
}

/*GetWorkflowExecutionLogsOK handles this case with default header values.

Logs of given LEXIS WorkflowExecution
*/
type GetWorkflowExecutionLogsOK struct {
	Payload []*models.Logs
}

func (o *GetWorkflowExecutionLogsOK) Error() string {
	return fmt.Sprintf("[GET /workflow/{workflowId}/execution/{workflowExecutionId}/logs][%d] getWorkflowExecutionLogsOK  %+v", 200, o.Payload)
}

func (o *GetWorkflowExecutionLogsOK) GetPayload() []*models.Logs {
	return o.Payload
}

func (o *GetWorkflowExecutionLogsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWorkflowExecutionLogsUnauthorized creates a GetWorkflowExecutionLogsUnauthorized with default headers values
func NewGetWorkflowExecutionLogsUnauthorized() *GetWorkflowExecutionLogsUnauthorized {
	return &GetWorkflowExecutionLogsUnauthorized{}
}

/*GetWorkflowExecutionLogsUnauthorized handles this case with default header values.

Unauthorized
*/
type GetWorkflowExecutionLogsUnauthorized struct {
	Payload *models.AuthorizationResponse
}

func (o *GetWorkflowExecutionLogsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /workflow/{workflowId}/execution/{workflowExecutionId}/logs][%d] getWorkflowExecutionLogsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetWorkflowExecutionLogsUnauthorized) GetPayload() *models.AuthorizationResponse {
	return o.Payload
}

func (o *GetWorkflowExecutionLogsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AuthorizationResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWorkflowExecutionLogsNotFound creates a GetWorkflowExecutionLogsNotFound with default headers values
func NewGetWorkflowExecutionLogsNotFound() *GetWorkflowExecutionLogsNotFound {
	return &GetWorkflowExecutionLogsNotFound{}
}

/*GetWorkflowExecutionLogsNotFound handles this case with default header values.

The WorkflowExecutionID provided does not exist.
*/
type GetWorkflowExecutionLogsNotFound struct {
	Payload *models.MissingResponse
}

func (o *GetWorkflowExecutionLogsNotFound) Error() string {
	return fmt.Sprintf("[GET /workflow/{workflowId}/execution/{workflowExecutionId}/logs][%d] getWorkflowExecutionLogsNotFound  %+v", 404, o.Payload)
}

func (o *GetWorkflowExecutionLogsNotFound) GetPayload() *models.MissingResponse {
	return o.Payload
}

func (o *GetWorkflowExecutionLogsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MissingResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWorkflowExecutionLogsInternalServerError creates a GetWorkflowExecutionLogsInternalServerError with default headers values
func NewGetWorkflowExecutionLogsInternalServerError() *GetWorkflowExecutionLogsInternalServerError {
	return &GetWorkflowExecutionLogsInternalServerError{}
}

/*GetWorkflowExecutionLogsInternalServerError handles this case with default header values.

unexpected error
*/
type GetWorkflowExecutionLogsInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *GetWorkflowExecutionLogsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /workflow/{workflowId}/execution/{workflowExecutionId}/logs][%d] getWorkflowExecutionLogsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetWorkflowExecutionLogsInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetWorkflowExecutionLogsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
