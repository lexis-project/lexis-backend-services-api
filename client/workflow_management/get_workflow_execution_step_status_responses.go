// Code generated by go-swagger; DO NOT EDIT.

package workflow_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/lexis-project/lexis-backend-services-api.git/models"
)

// GetWorkflowExecutionStepStatusReader is a Reader for the GetWorkflowExecutionStepStatus structure.
type GetWorkflowExecutionStepStatusReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetWorkflowExecutionStepStatusReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetWorkflowExecutionStepStatusOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetWorkflowExecutionStepStatusUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetWorkflowExecutionStepStatusNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetWorkflowExecutionStepStatusInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetWorkflowExecutionStepStatusOK creates a GetWorkflowExecutionStepStatusOK with default headers values
func NewGetWorkflowExecutionStepStatusOK() *GetWorkflowExecutionStepStatusOK {
	return &GetWorkflowExecutionStepStatusOK{}
}

/*GetWorkflowExecutionStepStatusOK handles this case with default header values.

Status of given LEXIS WorkflowExecution
*/
type GetWorkflowExecutionStepStatusOK struct {
	Payload []*models.WorkflowExecutionStepStatus
}

func (o *GetWorkflowExecutionStepStatusOK) Error() string {
	return fmt.Sprintf("[GET /workflow/{workflowId}/execution/{workflowExecutionId}/status][%d] getWorkflowExecutionStepStatusOK  %+v", 200, o.Payload)
}

func (o *GetWorkflowExecutionStepStatusOK) GetPayload() []*models.WorkflowExecutionStepStatus {
	return o.Payload
}

func (o *GetWorkflowExecutionStepStatusOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWorkflowExecutionStepStatusUnauthorized creates a GetWorkflowExecutionStepStatusUnauthorized with default headers values
func NewGetWorkflowExecutionStepStatusUnauthorized() *GetWorkflowExecutionStepStatusUnauthorized {
	return &GetWorkflowExecutionStepStatusUnauthorized{}
}

/*GetWorkflowExecutionStepStatusUnauthorized handles this case with default header values.

Unauthorized
*/
type GetWorkflowExecutionStepStatusUnauthorized struct {
	Payload *models.AuthorizationResponse
}

func (o *GetWorkflowExecutionStepStatusUnauthorized) Error() string {
	return fmt.Sprintf("[GET /workflow/{workflowId}/execution/{workflowExecutionId}/status][%d] getWorkflowExecutionStepStatusUnauthorized  %+v", 401, o.Payload)
}

func (o *GetWorkflowExecutionStepStatusUnauthorized) GetPayload() *models.AuthorizationResponse {
	return o.Payload
}

func (o *GetWorkflowExecutionStepStatusUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AuthorizationResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWorkflowExecutionStepStatusNotFound creates a GetWorkflowExecutionStepStatusNotFound with default headers values
func NewGetWorkflowExecutionStepStatusNotFound() *GetWorkflowExecutionStepStatusNotFound {
	return &GetWorkflowExecutionStepStatusNotFound{}
}

/*GetWorkflowExecutionStepStatusNotFound handles this case with default header values.

The WorkflowExecutionID provided does not exist.
*/
type GetWorkflowExecutionStepStatusNotFound struct {
	Payload *models.MissingResponse
}

func (o *GetWorkflowExecutionStepStatusNotFound) Error() string {
	return fmt.Sprintf("[GET /workflow/{workflowId}/execution/{workflowExecutionId}/status][%d] getWorkflowExecutionStepStatusNotFound  %+v", 404, o.Payload)
}

func (o *GetWorkflowExecutionStepStatusNotFound) GetPayload() *models.MissingResponse {
	return o.Payload
}

func (o *GetWorkflowExecutionStepStatusNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MissingResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWorkflowExecutionStepStatusInternalServerError creates a GetWorkflowExecutionStepStatusInternalServerError with default headers values
func NewGetWorkflowExecutionStepStatusInternalServerError() *GetWorkflowExecutionStepStatusInternalServerError {
	return &GetWorkflowExecutionStepStatusInternalServerError{}
}

/*GetWorkflowExecutionStepStatusInternalServerError handles this case with default header values.

unexpected error
*/
type GetWorkflowExecutionStepStatusInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *GetWorkflowExecutionStepStatusInternalServerError) Error() string {
	return fmt.Sprintf("[GET /workflow/{workflowId}/execution/{workflowExecutionId}/status][%d] getWorkflowExecutionStepStatusInternalServerError  %+v", 500, o.Payload)
}

func (o *GetWorkflowExecutionStepStatusInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetWorkflowExecutionStepStatusInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
