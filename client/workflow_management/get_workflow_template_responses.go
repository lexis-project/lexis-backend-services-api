// Code generated by go-swagger; DO NOT EDIT.

package workflow_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/lexis-project/lexis-backend-services-api.git/models"
)

// GetWorkflowTemplateReader is a Reader for the GetWorkflowTemplate structure.
type GetWorkflowTemplateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetWorkflowTemplateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetWorkflowTemplateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetWorkflowTemplateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetWorkflowTemplateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetWorkflowTemplateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetWorkflowTemplateOK creates a GetWorkflowTemplateOK with default headers values
func NewGetWorkflowTemplateOK() *GetWorkflowTemplateOK {
	return &GetWorkflowTemplateOK{}
}

/*GetWorkflowTemplateOK handles this case with default header values.

Workflow Template returned
*/
type GetWorkflowTemplateOK struct {
	Payload *models.WorkflowTemplate
}

func (o *GetWorkflowTemplateOK) Error() string {
	return fmt.Sprintf("[GET /workflow/template/{workflowTemplateId}][%d] getWorkflowTemplateOK  %+v", 200, o.Payload)
}

func (o *GetWorkflowTemplateOK) GetPayload() *models.WorkflowTemplate {
	return o.Payload
}

func (o *GetWorkflowTemplateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.WorkflowTemplate)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWorkflowTemplateUnauthorized creates a GetWorkflowTemplateUnauthorized with default headers values
func NewGetWorkflowTemplateUnauthorized() *GetWorkflowTemplateUnauthorized {
	return &GetWorkflowTemplateUnauthorized{}
}

/*GetWorkflowTemplateUnauthorized handles this case with default header values.

Authorization information is missing or invalid.
*/
type GetWorkflowTemplateUnauthorized struct {
	Payload *models.AuthorizationResponse
}

func (o *GetWorkflowTemplateUnauthorized) Error() string {
	return fmt.Sprintf("[GET /workflow/template/{workflowTemplateId}][%d] getWorkflowTemplateUnauthorized  %+v", 401, o.Payload)
}

func (o *GetWorkflowTemplateUnauthorized) GetPayload() *models.AuthorizationResponse {
	return o.Payload
}

func (o *GetWorkflowTemplateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AuthorizationResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWorkflowTemplateNotFound creates a GetWorkflowTemplateNotFound with default headers values
func NewGetWorkflowTemplateNotFound() *GetWorkflowTemplateNotFound {
	return &GetWorkflowTemplateNotFound{}
}

/*GetWorkflowTemplateNotFound handles this case with default header values.

WorkflowTemplate with WorkflowTemplateId not found.
*/
type GetWorkflowTemplateNotFound struct {
	Payload *models.MissingResponse
}

func (o *GetWorkflowTemplateNotFound) Error() string {
	return fmt.Sprintf("[GET /workflow/template/{workflowTemplateId}][%d] getWorkflowTemplateNotFound  %+v", 404, o.Payload)
}

func (o *GetWorkflowTemplateNotFound) GetPayload() *models.MissingResponse {
	return o.Payload
}

func (o *GetWorkflowTemplateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MissingResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWorkflowTemplateInternalServerError creates a GetWorkflowTemplateInternalServerError with default headers values
func NewGetWorkflowTemplateInternalServerError() *GetWorkflowTemplateInternalServerError {
	return &GetWorkflowTemplateInternalServerError{}
}

/*GetWorkflowTemplateInternalServerError handles this case with default header values.

unexpected error
*/
type GetWorkflowTemplateInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *GetWorkflowTemplateInternalServerError) Error() string {
	return fmt.Sprintf("[GET /workflow/template/{workflowTemplateId}][%d] getWorkflowTemplateInternalServerError  %+v", 500, o.Payload)
}

func (o *GetWorkflowTemplateInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetWorkflowTemplateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
