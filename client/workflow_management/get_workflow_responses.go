// Code generated by go-swagger; DO NOT EDIT.

package workflow_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/lexis-project/lexis-backend-services-api.git/models"
)

// GetWorkflowReader is a Reader for the GetWorkflow structure.
type GetWorkflowReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetWorkflowReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetWorkflowOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetWorkflowUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetWorkflowNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetWorkflowInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetWorkflowOK creates a GetWorkflowOK with default headers values
func NewGetWorkflowOK() *GetWorkflowOK {
	return &GetWorkflowOK{}
}

/*GetWorkflowOK handles this case with default header values.

Workflow returned
*/
type GetWorkflowOK struct {
	Payload *models.WorkflowDetail
}

func (o *GetWorkflowOK) Error() string {
	return fmt.Sprintf("[GET /workflow/{workflowId}][%d] getWorkflowOK  %+v", 200, o.Payload)
}

func (o *GetWorkflowOK) GetPayload() *models.WorkflowDetail {
	return o.Payload
}

func (o *GetWorkflowOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.WorkflowDetail)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWorkflowUnauthorized creates a GetWorkflowUnauthorized with default headers values
func NewGetWorkflowUnauthorized() *GetWorkflowUnauthorized {
	return &GetWorkflowUnauthorized{}
}

/*GetWorkflowUnauthorized handles this case with default header values.

Unauthorized
*/
type GetWorkflowUnauthorized struct {
	Payload *models.AuthorizationResponse
}

func (o *GetWorkflowUnauthorized) Error() string {
	return fmt.Sprintf("[GET /workflow/{workflowId}][%d] getWorkflowUnauthorized  %+v", 401, o.Payload)
}

func (o *GetWorkflowUnauthorized) GetPayload() *models.AuthorizationResponse {
	return o.Payload
}

func (o *GetWorkflowUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AuthorizationResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWorkflowNotFound creates a GetWorkflowNotFound with default headers values
func NewGetWorkflowNotFound() *GetWorkflowNotFound {
	return &GetWorkflowNotFound{}
}

/*GetWorkflowNotFound handles this case with default header values.

Workflow with WorkflowId not found.
*/
type GetWorkflowNotFound struct {
	Payload *models.MissingResponse
}

func (o *GetWorkflowNotFound) Error() string {
	return fmt.Sprintf("[GET /workflow/{workflowId}][%d] getWorkflowNotFound  %+v", 404, o.Payload)
}

func (o *GetWorkflowNotFound) GetPayload() *models.MissingResponse {
	return o.Payload
}

func (o *GetWorkflowNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MissingResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWorkflowInternalServerError creates a GetWorkflowInternalServerError with default headers values
func NewGetWorkflowInternalServerError() *GetWorkflowInternalServerError {
	return &GetWorkflowInternalServerError{}
}

/*GetWorkflowInternalServerError handles this case with default header values.

unexpected error
*/
type GetWorkflowInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *GetWorkflowInternalServerError) Error() string {
	return fmt.Sprintf("[GET /workflow/{workflowId}][%d] getWorkflowInternalServerError  %+v", 500, o.Payload)
}

func (o *GetWorkflowInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetWorkflowInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
