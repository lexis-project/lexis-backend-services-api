// Code generated by go-swagger; DO NOT EDIT.

package workflow_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/lexis-project/lexis-backend-services-api.git/models"
)

// CreateWorkflowExecutionReader is a Reader for the CreateWorkflowExecution structure.
type CreateWorkflowExecutionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateWorkflowExecutionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateWorkflowExecutionCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateWorkflowExecutionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateWorkflowExecutionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateWorkflowExecutionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewCreateWorkflowExecutionConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateWorkflowExecutionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateWorkflowExecutionCreated creates a CreateWorkflowExecutionCreated with default headers values
func NewCreateWorkflowExecutionCreated() *CreateWorkflowExecutionCreated {
	return &CreateWorkflowExecutionCreated{}
}

/*CreateWorkflowExecutionCreated handles this case with default header values.

LEXIS WorkflowExecution created and Input upload succesful
*/
type CreateWorkflowExecutionCreated struct {
	Payload *models.ItemCreatedResponse
}

func (o *CreateWorkflowExecutionCreated) Error() string {
	return fmt.Sprintf("[POST /workflow/{workflowId}/execution][%d] createWorkflowExecutionCreated  %+v", 201, o.Payload)
}

func (o *CreateWorkflowExecutionCreated) GetPayload() *models.ItemCreatedResponse {
	return o.Payload
}

func (o *CreateWorkflowExecutionCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ItemCreatedResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateWorkflowExecutionBadRequest creates a CreateWorkflowExecutionBadRequest with default headers values
func NewCreateWorkflowExecutionBadRequest() *CreateWorkflowExecutionBadRequest {
	return &CreateWorkflowExecutionBadRequest{}
}

/*CreateWorkflowExecutionBadRequest handles this case with default header values.

invalid input, object invalid
*/
type CreateWorkflowExecutionBadRequest struct {
	Payload *models.InvalidResponse
}

func (o *CreateWorkflowExecutionBadRequest) Error() string {
	return fmt.Sprintf("[POST /workflow/{workflowId}/execution][%d] createWorkflowExecutionBadRequest  %+v", 400, o.Payload)
}

func (o *CreateWorkflowExecutionBadRequest) GetPayload() *models.InvalidResponse {
	return o.Payload
}

func (o *CreateWorkflowExecutionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InvalidResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateWorkflowExecutionUnauthorized creates a CreateWorkflowExecutionUnauthorized with default headers values
func NewCreateWorkflowExecutionUnauthorized() *CreateWorkflowExecutionUnauthorized {
	return &CreateWorkflowExecutionUnauthorized{}
}

/*CreateWorkflowExecutionUnauthorized handles this case with default header values.

Unauthorized
*/
type CreateWorkflowExecutionUnauthorized struct {
	Payload *models.AuthorizationResponse
}

func (o *CreateWorkflowExecutionUnauthorized) Error() string {
	return fmt.Sprintf("[POST /workflow/{workflowId}/execution][%d] createWorkflowExecutionUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateWorkflowExecutionUnauthorized) GetPayload() *models.AuthorizationResponse {
	return o.Payload
}

func (o *CreateWorkflowExecutionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AuthorizationResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateWorkflowExecutionNotFound creates a CreateWorkflowExecutionNotFound with default headers values
func NewCreateWorkflowExecutionNotFound() *CreateWorkflowExecutionNotFound {
	return &CreateWorkflowExecutionNotFound{}
}

/*CreateWorkflowExecutionNotFound handles this case with default header values.

Required dependencies for WorkflowExecution creation not found
*/
type CreateWorkflowExecutionNotFound struct {
	Payload *models.MissingResponse
}

func (o *CreateWorkflowExecutionNotFound) Error() string {
	return fmt.Sprintf("[POST /workflow/{workflowId}/execution][%d] createWorkflowExecutionNotFound  %+v", 404, o.Payload)
}

func (o *CreateWorkflowExecutionNotFound) GetPayload() *models.MissingResponse {
	return o.Payload
}

func (o *CreateWorkflowExecutionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MissingResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateWorkflowExecutionConflict creates a CreateWorkflowExecutionConflict with default headers values
func NewCreateWorkflowExecutionConflict() *CreateWorkflowExecutionConflict {
	return &CreateWorkflowExecutionConflict{}
}

/*CreateWorkflowExecutionConflict handles this case with default header values.

LEXIS WorkflowExecution already exists (a4cApplication already deployed).
*/
type CreateWorkflowExecutionConflict struct {
	Payload *models.ConflictResponse
}

func (o *CreateWorkflowExecutionConflict) Error() string {
	return fmt.Sprintf("[POST /workflow/{workflowId}/execution][%d] createWorkflowExecutionConflict  %+v", 409, o.Payload)
}

func (o *CreateWorkflowExecutionConflict) GetPayload() *models.ConflictResponse {
	return o.Payload
}

func (o *CreateWorkflowExecutionConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ConflictResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateWorkflowExecutionInternalServerError creates a CreateWorkflowExecutionInternalServerError with default headers values
func NewCreateWorkflowExecutionInternalServerError() *CreateWorkflowExecutionInternalServerError {
	return &CreateWorkflowExecutionInternalServerError{}
}

/*CreateWorkflowExecutionInternalServerError handles this case with default header values.

unexpected error
*/
type CreateWorkflowExecutionInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *CreateWorkflowExecutionInternalServerError) Error() string {
	return fmt.Sprintf("[POST /workflow/{workflowId}/execution][%d] createWorkflowExecutionInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateWorkflowExecutionInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateWorkflowExecutionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
