// Code generated by go-swagger; DO NOT EDIT.

package approval_system_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/lexis-project/lexis-backend-services-api.git/models"
)

// CreateApprovedResourceRequestReader is a Reader for the CreateApprovedResourceRequest structure.
type CreateApprovedResourceRequestReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateApprovedResourceRequestReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateApprovedResourceRequestCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateApprovedResourceRequestBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateApprovedResourceRequestNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateApprovedResourceRequestInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateApprovedResourceRequestCreated creates a CreateApprovedResourceRequestCreated with default headers values
func NewCreateApprovedResourceRequestCreated() *CreateApprovedResourceRequestCreated {
	return &CreateApprovedResourceRequestCreated{}
}

/*CreateApprovedResourceRequestCreated handles this case with default header values.

approved resource request created
*/
type CreateApprovedResourceRequestCreated struct {
	Payload *models.ApprovalSystemCreatedResponse
}

func (o *CreateApprovedResourceRequestCreated) Error() string {
	return fmt.Sprintf("[POST /approval_system/approvedResourceRequest][%d] createApprovedResourceRequestCreated  %+v", 201, o.Payload)
}

func (o *CreateApprovedResourceRequestCreated) GetPayload() *models.ApprovalSystemCreatedResponse {
	return o.Payload
}

func (o *CreateApprovedResourceRequestCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ApprovalSystemCreatedResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateApprovedResourceRequestBadRequest creates a CreateApprovedResourceRequestBadRequest with default headers values
func NewCreateApprovedResourceRequestBadRequest() *CreateApprovedResourceRequestBadRequest {
	return &CreateApprovedResourceRequestBadRequest{}
}

/*CreateApprovedResourceRequestBadRequest handles this case with default header values.

invalid input, object invalid
*/
type CreateApprovedResourceRequestBadRequest struct {
	Payload *models.ApprovalSystemInvalidResponse
}

func (o *CreateApprovedResourceRequestBadRequest) Error() string {
	return fmt.Sprintf("[POST /approval_system/approvedResourceRequest][%d] createApprovedResourceRequestBadRequest  %+v", 400, o.Payload)
}

func (o *CreateApprovedResourceRequestBadRequest) GetPayload() *models.ApprovalSystemInvalidResponse {
	return o.Payload
}

func (o *CreateApprovedResourceRequestBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ApprovalSystemInvalidResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateApprovedResourceRequestNotFound creates a CreateApprovedResourceRequestNotFound with default headers values
func NewCreateApprovedResourceRequestNotFound() *CreateApprovedResourceRequestNotFound {
	return &CreateApprovedResourceRequestNotFound{}
}

/*CreateApprovedResourceRequestNotFound handles this case with default header values.

Required stuff for resource request creation hasn't been met.
*/
type CreateApprovedResourceRequestNotFound struct {
	Payload *models.ApprovalSystemMissingResponse
}

func (o *CreateApprovedResourceRequestNotFound) Error() string {
	return fmt.Sprintf("[POST /approval_system/approvedResourceRequest][%d] createApprovedResourceRequestNotFound  %+v", 404, o.Payload)
}

func (o *CreateApprovedResourceRequestNotFound) GetPayload() *models.ApprovalSystemMissingResponse {
	return o.Payload
}

func (o *CreateApprovedResourceRequestNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ApprovalSystemMissingResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateApprovedResourceRequestInternalServerError creates a CreateApprovedResourceRequestInternalServerError with default headers values
func NewCreateApprovedResourceRequestInternalServerError() *CreateApprovedResourceRequestInternalServerError {
	return &CreateApprovedResourceRequestInternalServerError{}
}

/*CreateApprovedResourceRequestInternalServerError handles this case with default header values.

unexpected error
*/
type CreateApprovedResourceRequestInternalServerError struct {
	Payload *models.ApprovalSystemErrorResponse
}

func (o *CreateApprovedResourceRequestInternalServerError) Error() string {
	return fmt.Sprintf("[POST /approval_system/approvedResourceRequest][%d] createApprovedResourceRequestInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateApprovedResourceRequestInternalServerError) GetPayload() *models.ApprovalSystemErrorResponse {
	return o.Payload
}

func (o *CreateApprovedResourceRequestInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ApprovalSystemErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
