// Code generated by go-swagger; DO NOT EDIT.

package cluster_information

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/lexis-project/lexis-backend-services-api.git/models"
)

// NewGetCommandTemplateParams creates a new GetCommandTemplateParams object
// with the default values initialized.
func NewGetCommandTemplateParams() *GetCommandTemplateParams {
	var ()
	return &GetCommandTemplateParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetCommandTemplateParamsWithTimeout creates a new GetCommandTemplateParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetCommandTemplateParamsWithTimeout(timeout time.Duration) *GetCommandTemplateParams {
	var ()
	return &GetCommandTemplateParams{

		timeout: timeout,
	}
}

// NewGetCommandTemplateParamsWithContext creates a new GetCommandTemplateParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetCommandTemplateParamsWithContext(ctx context.Context) *GetCommandTemplateParams {
	var ()
	return &GetCommandTemplateParams{

		Context: ctx,
	}
}

// NewGetCommandTemplateParamsWithHTTPClient creates a new GetCommandTemplateParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetCommandTemplateParamsWithHTTPClient(client *http.Client) *GetCommandTemplateParams {
	var ()
	return &GetCommandTemplateParams{
		HTTPClient: client,
	}
}

/*GetCommandTemplateParams contains all the parameters to send to the API endpoint
for the get command template operation typically these are written to a http.Request
*/
type GetCommandTemplateParams struct {

	/*Endpoint
	  (REQUIRED) HEAppE Endpoint of the HPC Resource

	*/
	Endpoint *string
	/*Request
	  Get command template parameters name request parameters

	*/
	Request *models.HeappeRequest
	/*Username
	  (OPTIONAL) username to use on HEAppE authz, defaults to the one retrieved via keycloak token

	*/
	Username *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get command template params
func (o *GetCommandTemplateParams) WithTimeout(timeout time.Duration) *GetCommandTemplateParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get command template params
func (o *GetCommandTemplateParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get command template params
func (o *GetCommandTemplateParams) WithContext(ctx context.Context) *GetCommandTemplateParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get command template params
func (o *GetCommandTemplateParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get command template params
func (o *GetCommandTemplateParams) WithHTTPClient(client *http.Client) *GetCommandTemplateParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get command template params
func (o *GetCommandTemplateParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithEndpoint adds the endpoint to the get command template params
func (o *GetCommandTemplateParams) WithEndpoint(endpoint *string) *GetCommandTemplateParams {
	o.SetEndpoint(endpoint)
	return o
}

// SetEndpoint adds the endpoint to the get command template params
func (o *GetCommandTemplateParams) SetEndpoint(endpoint *string) {
	o.Endpoint = endpoint
}

// WithRequest adds the request to the get command template params
func (o *GetCommandTemplateParams) WithRequest(request *models.HeappeRequest) *GetCommandTemplateParams {
	o.SetRequest(request)
	return o
}

// SetRequest adds the request to the get command template params
func (o *GetCommandTemplateParams) SetRequest(request *models.HeappeRequest) {
	o.Request = request
}

// WithUsername adds the username to the get command template params
func (o *GetCommandTemplateParams) WithUsername(username *string) *GetCommandTemplateParams {
	o.SetUsername(username)
	return o
}

// SetUsername adds the username to the get command template params
func (o *GetCommandTemplateParams) SetUsername(username *string) {
	o.Username = username
}

// WriteToRequest writes these params to a swagger request
func (o *GetCommandTemplateParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Endpoint != nil {

		// query param endpoint
		var qrEndpoint string
		if o.Endpoint != nil {
			qrEndpoint = *o.Endpoint
		}
		qEndpoint := qrEndpoint
		if qEndpoint != "" {
			if err := r.SetQueryParam("endpoint", qEndpoint); err != nil {
				return err
			}
		}

	}

	if o.Request != nil {
		if err := r.SetBodyParam(o.Request); err != nil {
			return err
		}
	}

	if o.Username != nil {

		// query param username
		var qrUsername string
		if o.Username != nil {
			qrUsername = *o.Username
		}
		qUsername := qrUsername
		if qUsername != "" {
			if err := r.SetQueryParam("username", qUsername); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
