// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// PushMethod push method
//
// swagger:model PushMethod
type PushMethod string

const (

	// PushMethodEmpty captures enum value "empty"
	PushMethodEmpty PushMethod = "empty"

	// PushMethodDirectupload captures enum value "directupload"
	PushMethodDirectupload PushMethod = "directupload"

	// PushMethodTus captures enum value "tus"
	PushMethodTus PushMethod = "tus"
)

// for schema
var pushMethodEnum []interface{}

func init() {
	var res []PushMethod
	if err := json.Unmarshal([]byte(`["empty","directupload","tus"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		pushMethodEnum = append(pushMethodEnum, v)
	}
}

func (m PushMethod) validatePushMethodEnum(path, location string, value PushMethod) error {
	if err := validate.EnumCase(path, location, value, pushMethodEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this push method
func (m PushMethod) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validatePushMethodEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
