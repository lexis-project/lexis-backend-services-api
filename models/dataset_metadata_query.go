// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// DatasetMetadataQuery dataset metadata query
//
// swagger:model DatasetMetadataQuery
type DatasetMetadataQuery struct {

	// DataCite AlternateIdentifier
	AlternateIdentifier string `json:"AlternateIdentifier,omitempty"`

	// DataCite AlternateIdentifierType. Size must match AlternateIdentifier
	AlternateIdentifierType string `json:"AlternateIdentifierType,omitempty"`

	// creation date
	CreationDate string `json:"CreationDate,omitempty"`

	// custom metadata
	CustomMetadata interface{} `json:"CustomMetadata,omitempty"`

	// description
	Description string `json:"Description,omitempty"`

	// e u d a t f i o
	EUDATFIO string `json:"EUDAT/FIO,omitempty"`

	// e u d a t f i x e d c o n t e n t
	EUDATFIXEDCONTENT string `json:"EUDAT/FIXED_CONTENT,omitempty"`

	// e u d a t p a r e n t
	EUDATPARENT string `json:"EUDAT/PARENT,omitempty"`

	// e u d a t r e p l i c a
	EUDATREPLICA string `json:"EUDAT/REPLICA,omitempty"`

	// e u d a t r o r
	EUDATROR string `json:"EUDAT/ROR,omitempty"`

	// p ID
	PID string `json:"PID,omitempty"`

	// access
	Access AccessMode `json:"access,omitempty"`

	// contributor
	Contributor string `json:"contributor,omitempty"`

	// creator
	Creator string `json:"creator,omitempty"`

	// format
	Format string `json:"format,omitempty"`

	// DataCite identifier (DOI), unused for now
	Identifier string `json:"identifier,omitempty"`

	// iRODS identifier
	InternalID string `json:"internalID,omitempty"`

	// owner
	Owner string `json:"owner,omitempty"`

	// project
	Project string `json:"project,omitempty"`

	// publication year
	PublicationYear string `json:"publicationYear,omitempty"`

	// publisher
	Publisher string `json:"publisher,omitempty"`

	// related identifier
	RelatedIdentifier string `json:"relatedIdentifier,omitempty"`

	// related software
	RelatedSoftware string `json:"relatedSoftware,omitempty"`

	// resource type
	ResourceType string `json:"resourceType,omitempty"`

	// resource type general
	ResourceTypeGeneral string `json:"resourceTypeGeneral,omitempty"`

	// rights
	Rights string `json:"rights,omitempty"`

	// rights identifier
	RightsIdentifier string `json:"rightsIdentifier,omitempty"`

	// rights URI
	RightsURI string `json:"rightsURI,omitempty"`

	// scope
	Scope string `json:"scope,omitempty"`

	// title
	Title string `json:"title,omitempty"`
}

// Validate validates this dataset metadata query
func (m *DatasetMetadataQuery) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAccess(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DatasetMetadataQuery) validateAccess(formats strfmt.Registry) error {

	if swag.IsZero(m.Access) { // not required
		return nil
	}

	if err := m.Access.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("access")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *DatasetMetadataQuery) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DatasetMetadataQuery) UnmarshalBinary(b []byte) error {
	var res DatasetMetadataQuery
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
